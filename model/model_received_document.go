/*
Fatture in Cloud API v2 - API Reference

Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.

API version: 2.1.3
Contact: info@fattureincloud.it
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// checks if the ReceivedDocument type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReceivedDocument{}

// ReceivedDocument struct for ReceivedDocument
type ReceivedDocument struct {
	// Received document id
	Id NullableInt32 `json:"id,omitempty"`
	Type *ReceivedDocumentType `json:"type,omitempty"`
	Entity *Entity `json:"entity,omitempty"`
	// Received document date [defaults to today's date]
	Date NullableString `json:"date,omitempty"`
	// Received document category
	Category NullableString `json:"category,omitempty"`
	// Received document description
	Description NullableString `json:"description,omitempty"`
	// Received document total net amount
	AmountNet NullableFloat32 `json:"amount_net,omitempty"`
	// Received document total vat amount
	AmountVat NullableFloat32 `json:"amount_vat,omitempty"`
	// Received document withholding tax amount
	AmountWithholdingTax NullableFloat32 `json:"amount_withholding_tax,omitempty"`
	// Received document other withholding tax amount
	AmountOtherWithholdingTax NullableFloat32 `json:"amount_other_withholding_tax,omitempty"`
	// [Read Only] Received document total gross amount
	AmountGross NullableFloat32 `json:"amount_gross,omitempty"`
	// Received document amortization value
	Amortization NullableFloat32 `json:"amortization,omitempty"`
	// Received document revenue center
	RcCenter NullableString `json:"rc_center,omitempty"`
	// Received document invoice number
	InvoiceNumber NullableString `json:"invoice_number,omitempty"`
	// Received document is marked
	IsMarked NullableBool `json:"is_marked,omitempty"`
	// Received document has items
	IsDetailed NullableBool `json:"is_detailed,omitempty"`
	// [Read Only] Received document is an e-invoice
	EInvoice NullableBool `json:"e_invoice,omitempty"`
	// [Read Only] Received document date of the next not paid payment
	NextDueDate NullableString `json:"next_due_date,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
	// Received document tax deducibility percentage
	TaxDeductibility NullableFloat32 `json:"tax_deductibility,omitempty"`
	// Received document vat deducibility percentage
	VatDeductibility NullableFloat32 `json:"vat_deductibility,omitempty"`
	ItemsList []ReceivedDocumentItemsListItem `json:"items_list,omitempty"`
	PaymentsList []ReceivedDocumentPaymentsListItem `json:"payments_list,omitempty"`
	// [Temporary] [Read Only] Received document url of the attached file
	AttachmentUrl NullableString `json:"attachment_url,omitempty"`
	// [Temporary] [Read Only] Received document url of the attachment preview
	AttachmentPreviewUrl NullableString `json:"attachment_preview_url,omitempty"`
	// Received document total items amount and total payments amount can differ if this field is set to false
	AutoCalculate NullableBool `json:"auto_calculate,omitempty"`
	// [Write Only] Received document attachment token returned by POST /received_documents/attachment
	AttachmentToken NullableString `json:"attachment_token,omitempty"`
	// Received Document can't be edited
	Locked NullableBool `json:"locked,omitempty"`
	// Received document creation date
	CreatedAt NullableString `json:"created_at,omitempty"`
	// Received document last update date
	UpdatedAt NullableString `json:"updated_at,omitempty"`
}

// NewReceivedDocument instantiates a new ReceivedDocument object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReceivedDocument() *ReceivedDocument {
	this := ReceivedDocument{}
	return &this
}

// NewReceivedDocumentWithDefaults instantiates a new ReceivedDocument object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReceivedDocumentWithDefaults() *ReceivedDocument {
	this := ReceivedDocument{}
	var type_ ReceivedDocumentType = ReceivedDocumentTypes.EXPENSE
	this.Type = &type_
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetId() int32 {
	if o == nil || IsNil(o.Id.Get()) {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ReceivedDocument) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *ReceivedDocument) SetId(v int32) *ReceivedDocument {
	o.Id.Set(&v)
		return o
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ReceivedDocument) SetIdNil() *ReceivedDocument {
	o.Id.Set(nil)
	return o
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ReceivedDocument) UnsetId() {
	o.Id.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ReceivedDocument) GetType() ReceivedDocumentType {
	if o == nil || IsNil(o.Type) {
		var ret ReceivedDocumentType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReceivedDocument) GetTypeOk() (*ReceivedDocumentType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ReceivedDocument) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given ReceivedDocumentType and assigns it to the Type field.
func (o *ReceivedDocument) SetType(v ReceivedDocumentType) *ReceivedDocument {
	o.Type = &v
		return o
}

// GetEntity returns the Entity field value if set, zero value otherwise.
func (o *ReceivedDocument) GetEntity() Entity {
	if o == nil || IsNil(o.Entity) {
		var ret Entity
		return ret
	}
	return *o.Entity
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReceivedDocument) GetEntityOk() (*Entity, bool) {
	if o == nil || IsNil(o.Entity) {
		return nil, false
	}
	return o.Entity, true
}

// HasEntity returns a boolean if a field has been set.
func (o *ReceivedDocument) HasEntity() bool {
	if o != nil && !IsNil(o.Entity) {
		return true
	}

	return false
}

// SetEntity gets a reference to the given Entity and assigns it to the Entity field.
func (o *ReceivedDocument) SetEntity(v Entity) *ReceivedDocument {
	o.Entity = &v
		return o
}

// GetDate returns the Date field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetDate() string {
	if o == nil || IsNil(o.Date.Get()) {
		var ret string
		return ret
	}
	return *o.Date.Get()
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Date.Get(), o.Date.IsSet()
}

// HasDate returns a boolean if a field has been set.
func (o *ReceivedDocument) HasDate() bool {
	if o != nil && o.Date.IsSet() {
		return true
	}

	return false
}

// SetDate gets a reference to the given NullableString and assigns it to the Date field.
func (o *ReceivedDocument) SetDate(v string) *ReceivedDocument {
	o.Date.Set(&v)
		return o
}
// SetDateNil sets the value for Date to be an explicit nil
func (o *ReceivedDocument) SetDateNil() *ReceivedDocument {
	o.Date.Set(nil)
	return o
}

// UnsetDate ensures that no value is present for Date, not even an explicit nil
func (o *ReceivedDocument) UnsetDate() {
	o.Date.Unset()
}

// GetCategory returns the Category field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetCategory() string {
	if o == nil || IsNil(o.Category.Get()) {
		var ret string
		return ret
	}
	return *o.Category.Get()
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Category.Get(), o.Category.IsSet()
}

// HasCategory returns a boolean if a field has been set.
func (o *ReceivedDocument) HasCategory() bool {
	if o != nil && o.Category.IsSet() {
		return true
	}

	return false
}

// SetCategory gets a reference to the given NullableString and assigns it to the Category field.
func (o *ReceivedDocument) SetCategory(v string) *ReceivedDocument {
	o.Category.Set(&v)
		return o
}
// SetCategoryNil sets the value for Category to be an explicit nil
func (o *ReceivedDocument) SetCategoryNil() *ReceivedDocument {
	o.Category.Set(nil)
	return o
}

// UnsetCategory ensures that no value is present for Category, not even an explicit nil
func (o *ReceivedDocument) UnsetCategory() {
	o.Category.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ReceivedDocument) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ReceivedDocument) SetDescription(v string) *ReceivedDocument {
	o.Description.Set(&v)
		return o
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ReceivedDocument) SetDescriptionNil() *ReceivedDocument {
	o.Description.Set(nil)
	return o
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ReceivedDocument) UnsetDescription() {
	o.Description.Unset()
}

// GetAmountNet returns the AmountNet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetAmountNet() float32 {
	if o == nil || IsNil(o.AmountNet.Get()) {
		var ret float32
		return ret
	}
	return *o.AmountNet.Get()
}

// GetAmountNetOk returns a tuple with the AmountNet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetAmountNetOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AmountNet.Get(), o.AmountNet.IsSet()
}

// HasAmountNet returns a boolean if a field has been set.
func (o *ReceivedDocument) HasAmountNet() bool {
	if o != nil && o.AmountNet.IsSet() {
		return true
	}

	return false
}

// SetAmountNet gets a reference to the given NullableFloat32 and assigns it to the AmountNet field.
func (o *ReceivedDocument) SetAmountNet(v float32) *ReceivedDocument {
	o.AmountNet.Set(&v)
		return o
}
// SetAmountNetNil sets the value for AmountNet to be an explicit nil
func (o *ReceivedDocument) SetAmountNetNil() *ReceivedDocument {
	o.AmountNet.Set(nil)
	return o
}

// UnsetAmountNet ensures that no value is present for AmountNet, not even an explicit nil
func (o *ReceivedDocument) UnsetAmountNet() {
	o.AmountNet.Unset()
}

// GetAmountVat returns the AmountVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetAmountVat() float32 {
	if o == nil || IsNil(o.AmountVat.Get()) {
		var ret float32
		return ret
	}
	return *o.AmountVat.Get()
}

// GetAmountVatOk returns a tuple with the AmountVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetAmountVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AmountVat.Get(), o.AmountVat.IsSet()
}

// HasAmountVat returns a boolean if a field has been set.
func (o *ReceivedDocument) HasAmountVat() bool {
	if o != nil && o.AmountVat.IsSet() {
		return true
	}

	return false
}

// SetAmountVat gets a reference to the given NullableFloat32 and assigns it to the AmountVat field.
func (o *ReceivedDocument) SetAmountVat(v float32) *ReceivedDocument {
	o.AmountVat.Set(&v)
		return o
}
// SetAmountVatNil sets the value for AmountVat to be an explicit nil
func (o *ReceivedDocument) SetAmountVatNil() *ReceivedDocument {
	o.AmountVat.Set(nil)
	return o
}

// UnsetAmountVat ensures that no value is present for AmountVat, not even an explicit nil
func (o *ReceivedDocument) UnsetAmountVat() {
	o.AmountVat.Unset()
}

// GetAmountWithholdingTax returns the AmountWithholdingTax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetAmountWithholdingTax() float32 {
	if o == nil || IsNil(o.AmountWithholdingTax.Get()) {
		var ret float32
		return ret
	}
	return *o.AmountWithholdingTax.Get()
}

// GetAmountWithholdingTaxOk returns a tuple with the AmountWithholdingTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetAmountWithholdingTaxOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AmountWithholdingTax.Get(), o.AmountWithholdingTax.IsSet()
}

// HasAmountWithholdingTax returns a boolean if a field has been set.
func (o *ReceivedDocument) HasAmountWithholdingTax() bool {
	if o != nil && o.AmountWithholdingTax.IsSet() {
		return true
	}

	return false
}

// SetAmountWithholdingTax gets a reference to the given NullableFloat32 and assigns it to the AmountWithholdingTax field.
func (o *ReceivedDocument) SetAmountWithholdingTax(v float32) *ReceivedDocument {
	o.AmountWithholdingTax.Set(&v)
		return o
}
// SetAmountWithholdingTaxNil sets the value for AmountWithholdingTax to be an explicit nil
func (o *ReceivedDocument) SetAmountWithholdingTaxNil() *ReceivedDocument {
	o.AmountWithholdingTax.Set(nil)
	return o
}

// UnsetAmountWithholdingTax ensures that no value is present for AmountWithholdingTax, not even an explicit nil
func (o *ReceivedDocument) UnsetAmountWithholdingTax() {
	o.AmountWithholdingTax.Unset()
}

// GetAmountOtherWithholdingTax returns the AmountOtherWithholdingTax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetAmountOtherWithholdingTax() float32 {
	if o == nil || IsNil(o.AmountOtherWithholdingTax.Get()) {
		var ret float32
		return ret
	}
	return *o.AmountOtherWithholdingTax.Get()
}

// GetAmountOtherWithholdingTaxOk returns a tuple with the AmountOtherWithholdingTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetAmountOtherWithholdingTaxOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AmountOtherWithholdingTax.Get(), o.AmountOtherWithholdingTax.IsSet()
}

// HasAmountOtherWithholdingTax returns a boolean if a field has been set.
func (o *ReceivedDocument) HasAmountOtherWithholdingTax() bool {
	if o != nil && o.AmountOtherWithholdingTax.IsSet() {
		return true
	}

	return false
}

// SetAmountOtherWithholdingTax gets a reference to the given NullableFloat32 and assigns it to the AmountOtherWithholdingTax field.
func (o *ReceivedDocument) SetAmountOtherWithholdingTax(v float32) *ReceivedDocument {
	o.AmountOtherWithholdingTax.Set(&v)
		return o
}
// SetAmountOtherWithholdingTaxNil sets the value for AmountOtherWithholdingTax to be an explicit nil
func (o *ReceivedDocument) SetAmountOtherWithholdingTaxNil() *ReceivedDocument {
	o.AmountOtherWithholdingTax.Set(nil)
	return o
}

// UnsetAmountOtherWithholdingTax ensures that no value is present for AmountOtherWithholdingTax, not even an explicit nil
func (o *ReceivedDocument) UnsetAmountOtherWithholdingTax() {
	o.AmountOtherWithholdingTax.Unset()
}

// GetAmountGross returns the AmountGross field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetAmountGross() float32 {
	if o == nil || IsNil(o.AmountGross.Get()) {
		var ret float32
		return ret
	}
	return *o.AmountGross.Get()
}

// GetAmountGrossOk returns a tuple with the AmountGross field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetAmountGrossOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AmountGross.Get(), o.AmountGross.IsSet()
}

// HasAmountGross returns a boolean if a field has been set.
func (o *ReceivedDocument) HasAmountGross() bool {
	if o != nil && o.AmountGross.IsSet() {
		return true
	}

	return false
}

// SetAmountGross gets a reference to the given NullableFloat32 and assigns it to the AmountGross field.
func (o *ReceivedDocument) SetAmountGross(v float32) *ReceivedDocument {
	o.AmountGross.Set(&v)
		return o
}
// SetAmountGrossNil sets the value for AmountGross to be an explicit nil
func (o *ReceivedDocument) SetAmountGrossNil() *ReceivedDocument {
	o.AmountGross.Set(nil)
	return o
}

// UnsetAmountGross ensures that no value is present for AmountGross, not even an explicit nil
func (o *ReceivedDocument) UnsetAmountGross() {
	o.AmountGross.Unset()
}

// GetAmortization returns the Amortization field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetAmortization() float32 {
	if o == nil || IsNil(o.Amortization.Get()) {
		var ret float32
		return ret
	}
	return *o.Amortization.Get()
}

// GetAmortizationOk returns a tuple with the Amortization field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetAmortizationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Amortization.Get(), o.Amortization.IsSet()
}

// HasAmortization returns a boolean if a field has been set.
func (o *ReceivedDocument) HasAmortization() bool {
	if o != nil && o.Amortization.IsSet() {
		return true
	}

	return false
}

// SetAmortization gets a reference to the given NullableFloat32 and assigns it to the Amortization field.
func (o *ReceivedDocument) SetAmortization(v float32) *ReceivedDocument {
	o.Amortization.Set(&v)
		return o
}
// SetAmortizationNil sets the value for Amortization to be an explicit nil
func (o *ReceivedDocument) SetAmortizationNil() *ReceivedDocument {
	o.Amortization.Set(nil)
	return o
}

// UnsetAmortization ensures that no value is present for Amortization, not even an explicit nil
func (o *ReceivedDocument) UnsetAmortization() {
	o.Amortization.Unset()
}

// GetRcCenter returns the RcCenter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetRcCenter() string {
	if o == nil || IsNil(o.RcCenter.Get()) {
		var ret string
		return ret
	}
	return *o.RcCenter.Get()
}

// GetRcCenterOk returns a tuple with the RcCenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetRcCenterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RcCenter.Get(), o.RcCenter.IsSet()
}

// HasRcCenter returns a boolean if a field has been set.
func (o *ReceivedDocument) HasRcCenter() bool {
	if o != nil && o.RcCenter.IsSet() {
		return true
	}

	return false
}

// SetRcCenter gets a reference to the given NullableString and assigns it to the RcCenter field.
func (o *ReceivedDocument) SetRcCenter(v string) *ReceivedDocument {
	o.RcCenter.Set(&v)
		return o
}
// SetRcCenterNil sets the value for RcCenter to be an explicit nil
func (o *ReceivedDocument) SetRcCenterNil() *ReceivedDocument {
	o.RcCenter.Set(nil)
	return o
}

// UnsetRcCenter ensures that no value is present for RcCenter, not even an explicit nil
func (o *ReceivedDocument) UnsetRcCenter() {
	o.RcCenter.Unset()
}

// GetInvoiceNumber returns the InvoiceNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetInvoiceNumber() string {
	if o == nil || IsNil(o.InvoiceNumber.Get()) {
		var ret string
		return ret
	}
	return *o.InvoiceNumber.Get()
}

// GetInvoiceNumberOk returns a tuple with the InvoiceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetInvoiceNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceNumber.Get(), o.InvoiceNumber.IsSet()
}

// HasInvoiceNumber returns a boolean if a field has been set.
func (o *ReceivedDocument) HasInvoiceNumber() bool {
	if o != nil && o.InvoiceNumber.IsSet() {
		return true
	}

	return false
}

// SetInvoiceNumber gets a reference to the given NullableString and assigns it to the InvoiceNumber field.
func (o *ReceivedDocument) SetInvoiceNumber(v string) *ReceivedDocument {
	o.InvoiceNumber.Set(&v)
		return o
}
// SetInvoiceNumberNil sets the value for InvoiceNumber to be an explicit nil
func (o *ReceivedDocument) SetInvoiceNumberNil() *ReceivedDocument {
	o.InvoiceNumber.Set(nil)
	return o
}

// UnsetInvoiceNumber ensures that no value is present for InvoiceNumber, not even an explicit nil
func (o *ReceivedDocument) UnsetInvoiceNumber() {
	o.InvoiceNumber.Unset()
}

// GetIsMarked returns the IsMarked field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetIsMarked() bool {
	if o == nil || IsNil(o.IsMarked.Get()) {
		var ret bool
		return ret
	}
	return *o.IsMarked.Get()
}

// GetIsMarkedOk returns a tuple with the IsMarked field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetIsMarkedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsMarked.Get(), o.IsMarked.IsSet()
}

// HasIsMarked returns a boolean if a field has been set.
func (o *ReceivedDocument) HasIsMarked() bool {
	if o != nil && o.IsMarked.IsSet() {
		return true
	}

	return false
}

// SetIsMarked gets a reference to the given NullableBool and assigns it to the IsMarked field.
func (o *ReceivedDocument) SetIsMarked(v bool) *ReceivedDocument {
	o.IsMarked.Set(&v)
		return o
}
// SetIsMarkedNil sets the value for IsMarked to be an explicit nil
func (o *ReceivedDocument) SetIsMarkedNil() *ReceivedDocument {
	o.IsMarked.Set(nil)
	return o
}

// UnsetIsMarked ensures that no value is present for IsMarked, not even an explicit nil
func (o *ReceivedDocument) UnsetIsMarked() {
	o.IsMarked.Unset()
}

// GetIsDetailed returns the IsDetailed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetIsDetailed() bool {
	if o == nil || IsNil(o.IsDetailed.Get()) {
		var ret bool
		return ret
	}
	return *o.IsDetailed.Get()
}

// GetIsDetailedOk returns a tuple with the IsDetailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetIsDetailedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsDetailed.Get(), o.IsDetailed.IsSet()
}

// HasIsDetailed returns a boolean if a field has been set.
func (o *ReceivedDocument) HasIsDetailed() bool {
	if o != nil && o.IsDetailed.IsSet() {
		return true
	}

	return false
}

// SetIsDetailed gets a reference to the given NullableBool and assigns it to the IsDetailed field.
func (o *ReceivedDocument) SetIsDetailed(v bool) *ReceivedDocument {
	o.IsDetailed.Set(&v)
		return o
}
// SetIsDetailedNil sets the value for IsDetailed to be an explicit nil
func (o *ReceivedDocument) SetIsDetailedNil() *ReceivedDocument {
	o.IsDetailed.Set(nil)
	return o
}

// UnsetIsDetailed ensures that no value is present for IsDetailed, not even an explicit nil
func (o *ReceivedDocument) UnsetIsDetailed() {
	o.IsDetailed.Unset()
}

// GetEInvoice returns the EInvoice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetEInvoice() bool {
	if o == nil || IsNil(o.EInvoice.Get()) {
		var ret bool
		return ret
	}
	return *o.EInvoice.Get()
}

// GetEInvoiceOk returns a tuple with the EInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetEInvoiceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EInvoice.Get(), o.EInvoice.IsSet()
}

// HasEInvoice returns a boolean if a field has been set.
func (o *ReceivedDocument) HasEInvoice() bool {
	if o != nil && o.EInvoice.IsSet() {
		return true
	}

	return false
}

// SetEInvoice gets a reference to the given NullableBool and assigns it to the EInvoice field.
func (o *ReceivedDocument) SetEInvoice(v bool) *ReceivedDocument {
	o.EInvoice.Set(&v)
		return o
}
// SetEInvoiceNil sets the value for EInvoice to be an explicit nil
func (o *ReceivedDocument) SetEInvoiceNil() *ReceivedDocument {
	o.EInvoice.Set(nil)
	return o
}

// UnsetEInvoice ensures that no value is present for EInvoice, not even an explicit nil
func (o *ReceivedDocument) UnsetEInvoice() {
	o.EInvoice.Unset()
}

// GetNextDueDate returns the NextDueDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetNextDueDate() string {
	if o == nil || IsNil(o.NextDueDate.Get()) {
		var ret string
		return ret
	}
	return *o.NextDueDate.Get()
}

// GetNextDueDateOk returns a tuple with the NextDueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetNextDueDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextDueDate.Get(), o.NextDueDate.IsSet()
}

// HasNextDueDate returns a boolean if a field has been set.
func (o *ReceivedDocument) HasNextDueDate() bool {
	if o != nil && o.NextDueDate.IsSet() {
		return true
	}

	return false
}

// SetNextDueDate gets a reference to the given NullableString and assigns it to the NextDueDate field.
func (o *ReceivedDocument) SetNextDueDate(v string) *ReceivedDocument {
	o.NextDueDate.Set(&v)
		return o
}
// SetNextDueDateNil sets the value for NextDueDate to be an explicit nil
func (o *ReceivedDocument) SetNextDueDateNil() *ReceivedDocument {
	o.NextDueDate.Set(nil)
	return o
}

// UnsetNextDueDate ensures that no value is present for NextDueDate, not even an explicit nil
func (o *ReceivedDocument) UnsetNextDueDate() {
	o.NextDueDate.Unset()
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *ReceivedDocument) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReceivedDocument) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *ReceivedDocument) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *ReceivedDocument) SetCurrency(v Currency) *ReceivedDocument {
	o.Currency = &v
		return o
}

// GetTaxDeductibility returns the TaxDeductibility field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetTaxDeductibility() float32 {
	if o == nil || IsNil(o.TaxDeductibility.Get()) {
		var ret float32
		return ret
	}
	return *o.TaxDeductibility.Get()
}

// GetTaxDeductibilityOk returns a tuple with the TaxDeductibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetTaxDeductibilityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxDeductibility.Get(), o.TaxDeductibility.IsSet()
}

// HasTaxDeductibility returns a boolean if a field has been set.
func (o *ReceivedDocument) HasTaxDeductibility() bool {
	if o != nil && o.TaxDeductibility.IsSet() {
		return true
	}

	return false
}

// SetTaxDeductibility gets a reference to the given NullableFloat32 and assigns it to the TaxDeductibility field.
func (o *ReceivedDocument) SetTaxDeductibility(v float32) *ReceivedDocument {
	o.TaxDeductibility.Set(&v)
		return o
}
// SetTaxDeductibilityNil sets the value for TaxDeductibility to be an explicit nil
func (o *ReceivedDocument) SetTaxDeductibilityNil() *ReceivedDocument {
	o.TaxDeductibility.Set(nil)
	return o
}

// UnsetTaxDeductibility ensures that no value is present for TaxDeductibility, not even an explicit nil
func (o *ReceivedDocument) UnsetTaxDeductibility() {
	o.TaxDeductibility.Unset()
}

// GetVatDeductibility returns the VatDeductibility field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetVatDeductibility() float32 {
	if o == nil || IsNil(o.VatDeductibility.Get()) {
		var ret float32
		return ret
	}
	return *o.VatDeductibility.Get()
}

// GetVatDeductibilityOk returns a tuple with the VatDeductibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetVatDeductibilityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.VatDeductibility.Get(), o.VatDeductibility.IsSet()
}

// HasVatDeductibility returns a boolean if a field has been set.
func (o *ReceivedDocument) HasVatDeductibility() bool {
	if o != nil && o.VatDeductibility.IsSet() {
		return true
	}

	return false
}

// SetVatDeductibility gets a reference to the given NullableFloat32 and assigns it to the VatDeductibility field.
func (o *ReceivedDocument) SetVatDeductibility(v float32) *ReceivedDocument {
	o.VatDeductibility.Set(&v)
		return o
}
// SetVatDeductibilityNil sets the value for VatDeductibility to be an explicit nil
func (o *ReceivedDocument) SetVatDeductibilityNil() *ReceivedDocument {
	o.VatDeductibility.Set(nil)
	return o
}

// UnsetVatDeductibility ensures that no value is present for VatDeductibility, not even an explicit nil
func (o *ReceivedDocument) UnsetVatDeductibility() {
	o.VatDeductibility.Unset()
}

// GetItemsList returns the ItemsList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetItemsList() []ReceivedDocumentItemsListItem {
	if o == nil {
		var ret []ReceivedDocumentItemsListItem
		return ret
	}
	return o.ItemsList
}

// GetItemsListOk returns a tuple with the ItemsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetItemsListOk() ([]ReceivedDocumentItemsListItem, bool) {
	if o == nil || IsNil(o.ItemsList) {
		return nil, false
	}
	return o.ItemsList, true
}

// HasItemsList returns a boolean if a field has been set.
func (o *ReceivedDocument) HasItemsList() bool {
	if o != nil && !IsNil(o.ItemsList) {
		return true
	}

	return false
}

// SetItemsList gets a reference to the given []ReceivedDocumentItemsListItem and assigns it to the ItemsList field.
func (o *ReceivedDocument) SetItemsList(v []ReceivedDocumentItemsListItem) *ReceivedDocument {
	o.ItemsList = v
		return o
}

// GetPaymentsList returns the PaymentsList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetPaymentsList() []ReceivedDocumentPaymentsListItem {
	if o == nil {
		var ret []ReceivedDocumentPaymentsListItem
		return ret
	}
	return o.PaymentsList
}

// GetPaymentsListOk returns a tuple with the PaymentsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetPaymentsListOk() ([]ReceivedDocumentPaymentsListItem, bool) {
	if o == nil || IsNil(o.PaymentsList) {
		return nil, false
	}
	return o.PaymentsList, true
}

// HasPaymentsList returns a boolean if a field has been set.
func (o *ReceivedDocument) HasPaymentsList() bool {
	if o != nil && !IsNil(o.PaymentsList) {
		return true
	}

	return false
}

// SetPaymentsList gets a reference to the given []ReceivedDocumentPaymentsListItem and assigns it to the PaymentsList field.
func (o *ReceivedDocument) SetPaymentsList(v []ReceivedDocumentPaymentsListItem) *ReceivedDocument {
	o.PaymentsList = v
		return o
}

// GetAttachmentUrl returns the AttachmentUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetAttachmentUrl() string {
	if o == nil || IsNil(o.AttachmentUrl.Get()) {
		var ret string
		return ret
	}
	return *o.AttachmentUrl.Get()
}

// GetAttachmentUrlOk returns a tuple with the AttachmentUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetAttachmentUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttachmentUrl.Get(), o.AttachmentUrl.IsSet()
}

// HasAttachmentUrl returns a boolean if a field has been set.
func (o *ReceivedDocument) HasAttachmentUrl() bool {
	if o != nil && o.AttachmentUrl.IsSet() {
		return true
	}

	return false
}

// SetAttachmentUrl gets a reference to the given NullableString and assigns it to the AttachmentUrl field.
func (o *ReceivedDocument) SetAttachmentUrl(v string) *ReceivedDocument {
	o.AttachmentUrl.Set(&v)
		return o
}
// SetAttachmentUrlNil sets the value for AttachmentUrl to be an explicit nil
func (o *ReceivedDocument) SetAttachmentUrlNil() *ReceivedDocument {
	o.AttachmentUrl.Set(nil)
	return o
}

// UnsetAttachmentUrl ensures that no value is present for AttachmentUrl, not even an explicit nil
func (o *ReceivedDocument) UnsetAttachmentUrl() {
	o.AttachmentUrl.Unset()
}

// GetAttachmentPreviewUrl returns the AttachmentPreviewUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetAttachmentPreviewUrl() string {
	if o == nil || IsNil(o.AttachmentPreviewUrl.Get()) {
		var ret string
		return ret
	}
	return *o.AttachmentPreviewUrl.Get()
}

// GetAttachmentPreviewUrlOk returns a tuple with the AttachmentPreviewUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetAttachmentPreviewUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttachmentPreviewUrl.Get(), o.AttachmentPreviewUrl.IsSet()
}

// HasAttachmentPreviewUrl returns a boolean if a field has been set.
func (o *ReceivedDocument) HasAttachmentPreviewUrl() bool {
	if o != nil && o.AttachmentPreviewUrl.IsSet() {
		return true
	}

	return false
}

// SetAttachmentPreviewUrl gets a reference to the given NullableString and assigns it to the AttachmentPreviewUrl field.
func (o *ReceivedDocument) SetAttachmentPreviewUrl(v string) *ReceivedDocument {
	o.AttachmentPreviewUrl.Set(&v)
		return o
}
// SetAttachmentPreviewUrlNil sets the value for AttachmentPreviewUrl to be an explicit nil
func (o *ReceivedDocument) SetAttachmentPreviewUrlNil() *ReceivedDocument {
	o.AttachmentPreviewUrl.Set(nil)
	return o
}

// UnsetAttachmentPreviewUrl ensures that no value is present for AttachmentPreviewUrl, not even an explicit nil
func (o *ReceivedDocument) UnsetAttachmentPreviewUrl() {
	o.AttachmentPreviewUrl.Unset()
}

// GetAutoCalculate returns the AutoCalculate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetAutoCalculate() bool {
	if o == nil || IsNil(o.AutoCalculate.Get()) {
		var ret bool
		return ret
	}
	return *o.AutoCalculate.Get()
}

// GetAutoCalculateOk returns a tuple with the AutoCalculate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetAutoCalculateOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoCalculate.Get(), o.AutoCalculate.IsSet()
}

// HasAutoCalculate returns a boolean if a field has been set.
func (o *ReceivedDocument) HasAutoCalculate() bool {
	if o != nil && o.AutoCalculate.IsSet() {
		return true
	}

	return false
}

// SetAutoCalculate gets a reference to the given NullableBool and assigns it to the AutoCalculate field.
func (o *ReceivedDocument) SetAutoCalculate(v bool) *ReceivedDocument {
	o.AutoCalculate.Set(&v)
		return o
}
// SetAutoCalculateNil sets the value for AutoCalculate to be an explicit nil
func (o *ReceivedDocument) SetAutoCalculateNil() *ReceivedDocument {
	o.AutoCalculate.Set(nil)
	return o
}

// UnsetAutoCalculate ensures that no value is present for AutoCalculate, not even an explicit nil
func (o *ReceivedDocument) UnsetAutoCalculate() {
	o.AutoCalculate.Unset()
}

// GetAttachmentToken returns the AttachmentToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetAttachmentToken() string {
	if o == nil || IsNil(o.AttachmentToken.Get()) {
		var ret string
		return ret
	}
	return *o.AttachmentToken.Get()
}

// GetAttachmentTokenOk returns a tuple with the AttachmentToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetAttachmentTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttachmentToken.Get(), o.AttachmentToken.IsSet()
}

// HasAttachmentToken returns a boolean if a field has been set.
func (o *ReceivedDocument) HasAttachmentToken() bool {
	if o != nil && o.AttachmentToken.IsSet() {
		return true
	}

	return false
}

// SetAttachmentToken gets a reference to the given NullableString and assigns it to the AttachmentToken field.
func (o *ReceivedDocument) SetAttachmentToken(v string) *ReceivedDocument {
	o.AttachmentToken.Set(&v)
		return o
}
// SetAttachmentTokenNil sets the value for AttachmentToken to be an explicit nil
func (o *ReceivedDocument) SetAttachmentTokenNil() *ReceivedDocument {
	o.AttachmentToken.Set(nil)
	return o
}

// UnsetAttachmentToken ensures that no value is present for AttachmentToken, not even an explicit nil
func (o *ReceivedDocument) UnsetAttachmentToken() {
	o.AttachmentToken.Unset()
}

// GetLocked returns the Locked field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetLocked() bool {
	if o == nil || IsNil(o.Locked.Get()) {
		var ret bool
		return ret
	}
	return *o.Locked.Get()
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetLockedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locked.Get(), o.Locked.IsSet()
}

// HasLocked returns a boolean if a field has been set.
func (o *ReceivedDocument) HasLocked() bool {
	if o != nil && o.Locked.IsSet() {
		return true
	}

	return false
}

// SetLocked gets a reference to the given NullableBool and assigns it to the Locked field.
func (o *ReceivedDocument) SetLocked(v bool) *ReceivedDocument {
	o.Locked.Set(&v)
		return o
}
// SetLockedNil sets the value for Locked to be an explicit nil
func (o *ReceivedDocument) SetLockedNil() *ReceivedDocument {
	o.Locked.Set(nil)
	return o
}

// UnsetLocked ensures that no value is present for Locked, not even an explicit nil
func (o *ReceivedDocument) UnsetLocked() {
	o.Locked.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ReceivedDocument) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableString and assigns it to the CreatedAt field.
func (o *ReceivedDocument) SetCreatedAt(v string) *ReceivedDocument {
	o.CreatedAt.Set(&v)
		return o
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *ReceivedDocument) SetCreatedAtNil() *ReceivedDocument {
	o.CreatedAt.Set(nil)
	return o
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *ReceivedDocument) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceivedDocument) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceivedDocument) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ReceivedDocument) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableString and assigns it to the UpdatedAt field.
func (o *ReceivedDocument) SetUpdatedAt(v string) *ReceivedDocument {
	o.UpdatedAt.Set(&v)
		return o
}
// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *ReceivedDocument) SetUpdatedAtNil() *ReceivedDocument {
	o.UpdatedAt.Set(nil)
	return o
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *ReceivedDocument) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

func (o ReceivedDocument) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReceivedDocument) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Entity) {
		toSerialize["entity"] = o.Entity
	}
	if o.Date.IsSet() {
		toSerialize["date"] = o.Date.Get()
	}
	if o.Category.IsSet() {
		toSerialize["category"] = o.Category.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.AmountNet.IsSet() {
		toSerialize["amount_net"] = o.AmountNet.Get()
	}
	if o.AmountVat.IsSet() {
		toSerialize["amount_vat"] = o.AmountVat.Get()
	}
	if o.AmountWithholdingTax.IsSet() {
		toSerialize["amount_withholding_tax"] = o.AmountWithholdingTax.Get()
	}
	if o.AmountOtherWithholdingTax.IsSet() {
		toSerialize["amount_other_withholding_tax"] = o.AmountOtherWithholdingTax.Get()
	}
	if o.AmountGross.IsSet() {
		toSerialize["amount_gross"] = o.AmountGross.Get()
	}
	if o.Amortization.IsSet() {
		toSerialize["amortization"] = o.Amortization.Get()
	}
	if o.RcCenter.IsSet() {
		toSerialize["rc_center"] = o.RcCenter.Get()
	}
	if o.InvoiceNumber.IsSet() {
		toSerialize["invoice_number"] = o.InvoiceNumber.Get()
	}
	if o.IsMarked.IsSet() {
		toSerialize["is_marked"] = o.IsMarked.Get()
	}
	if o.IsDetailed.IsSet() {
		toSerialize["is_detailed"] = o.IsDetailed.Get()
	}
	if o.EInvoice.IsSet() {
		toSerialize["e_invoice"] = o.EInvoice.Get()
	}
	if o.NextDueDate.IsSet() {
		toSerialize["next_due_date"] = o.NextDueDate.Get()
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if o.TaxDeductibility.IsSet() {
		toSerialize["tax_deductibility"] = o.TaxDeductibility.Get()
	}
	if o.VatDeductibility.IsSet() {
		toSerialize["vat_deductibility"] = o.VatDeductibility.Get()
	}
	if o.ItemsList != nil {
		toSerialize["items_list"] = o.ItemsList
	}
	if o.PaymentsList != nil {
		toSerialize["payments_list"] = o.PaymentsList
	}
	if o.AttachmentUrl.IsSet() {
		toSerialize["attachment_url"] = o.AttachmentUrl.Get()
	}
	if o.AttachmentPreviewUrl.IsSet() {
		toSerialize["attachment_preview_url"] = o.AttachmentPreviewUrl.Get()
	}
	if o.AutoCalculate.IsSet() {
		toSerialize["auto_calculate"] = o.AutoCalculate.Get()
	}
	if o.AttachmentToken.IsSet() {
		toSerialize["attachment_token"] = o.AttachmentToken.Get()
	}
	if o.Locked.IsSet() {
		toSerialize["locked"] = o.Locked.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}
	return toSerialize, nil
}

type NullableReceivedDocument struct {
	value *ReceivedDocument
	isSet bool
}

func (v NullableReceivedDocument) Get() *ReceivedDocument {
	return v.value
}

func (v *NullableReceivedDocument) Set(val *ReceivedDocument) {
	v.value = val
	v.isSet = true
}

func (v NullableReceivedDocument) IsSet() bool {
	return v.isSet
}

func (v *NullableReceivedDocument) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReceivedDocument(val *ReceivedDocument) *NullableReceivedDocument {
	return &NullableReceivedDocument{value: val, isSet: true}
}

func (v NullableReceivedDocument) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReceivedDocument) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


