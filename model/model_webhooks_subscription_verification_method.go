/*
Fatture in Cloud API v2 - API Reference

Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.

API version: 2.1.5
Contact: info@fattureincloud.it
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
	"fmt"
)

// WebhooksSubscriptionVerificationMethod Webhooks Subscription verification method
type WebhooksSubscriptionVerificationMethod string

// List of WebhooksSubscriptionVerificationMethod
var WebhooksSubscriptionVerificationMethods = struct {
	HEADER WebhooksSubscriptionVerificationMethod
	QUERY WebhooksSubscriptionVerificationMethod
} {
	HEADER: "header",
	QUERY: "query",
}

// All allowed values of WebhooksSubscriptionVerificationMethod enum
var AllowedWebhooksSubscriptionVerificationMethodEnumValues = []WebhooksSubscriptionVerificationMethod{
	"header",
	"query",
}

func (v *WebhooksSubscriptionVerificationMethod) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WebhooksSubscriptionVerificationMethod(value)
	for _, existing := range AllowedWebhooksSubscriptionVerificationMethodEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WebhooksSubscriptionVerificationMethod", value)
}

// NewWebhooksSubscriptionVerificationMethodFromValue returns a pointer to a valid WebhooksSubscriptionVerificationMethod
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWebhooksSubscriptionVerificationMethodFromValue(v string) (*WebhooksSubscriptionVerificationMethod, error) {
	ev := WebhooksSubscriptionVerificationMethod(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WebhooksSubscriptionVerificationMethod: valid values are %v", v, AllowedWebhooksSubscriptionVerificationMethodEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WebhooksSubscriptionVerificationMethod) IsValid() bool {
	for _, existing := range AllowedWebhooksSubscriptionVerificationMethodEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WebhooksSubscriptionVerificationMethod value
func (v WebhooksSubscriptionVerificationMethod) Ptr() *WebhooksSubscriptionVerificationMethod {
	return &v
}

type NullableWebhooksSubscriptionVerificationMethod struct {
	value *WebhooksSubscriptionVerificationMethod
	isSet bool
}

func (v NullableWebhooksSubscriptionVerificationMethod) Get() *WebhooksSubscriptionVerificationMethod {
	return v.value
}

func (v *NullableWebhooksSubscriptionVerificationMethod) Set(val *WebhooksSubscriptionVerificationMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhooksSubscriptionVerificationMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhooksSubscriptionVerificationMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhooksSubscriptionVerificationMethod(val *WebhooksSubscriptionVerificationMethod) *NullableWebhooksSubscriptionVerificationMethod {
	return &NullableWebhooksSubscriptionVerificationMethod{value: val, isSet: true}
}

func (v NullableWebhooksSubscriptionVerificationMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhooksSubscriptionVerificationMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

