/*
Fatture in Cloud API v2 - API Reference

Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.

API version: 2.0.23
Contact: info@fattureincloud.it
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// Entity 
type Entity struct {
	// Unique identifier
	Id NullableInt32 `json:"id,omitempty"`
	// Code.
	Code NullableString `json:"code,omitempty"`
	// Name
	Name NullableString `json:"name,omitempty"`
	Type NullableEntityType `json:"type,omitempty"`
	// First name.
	FirstName NullableString `json:"first_name,omitempty"`
	// Last name.
	LastName NullableString `json:"last_name,omitempty"`
	ContactPerson NullableString `json:"contact_person,omitempty"`
	// Vat number
	VatNumber NullableString `json:"vat_number,omitempty"`
	// Tax code.
	TaxCode NullableString `json:"tax_code,omitempty"`
	// Street address.
	AddressStreet NullableString `json:"address_street,omitempty"`
	// Postal code.
	AddressPostalCode NullableString `json:"address_postal_code,omitempty"`
	// City.
	AddressCity NullableString `json:"address_city,omitempty"`
	// Province.
	AddressProvince NullableString `json:"address_province,omitempty"`
	// Address extra info.
	AddressExtra NullableString `json:"address_extra,omitempty"`
	// Country
	Country NullableString `json:"country,omitempty"`
	// Country Iso
	CountryIso NullableString `json:"country_iso,omitempty"`
	// Email.
	Email NullableString `json:"email,omitempty"`
	// Certified email.
	CertifiedEmail NullableString `json:"certified_email,omitempty"`
	// Phone.
	Phone NullableString `json:"phone,omitempty"`
	// Fax.
	Fax NullableString `json:"fax,omitempty"`
	// Extra notes.
	Notes NullableString `json:"notes,omitempty"`
	DefaultVat NullableVatType `json:"default_vat,omitempty"`
	// [Only for client] Default payment terms.
	DefaultPaymentTerms NullableInt32 `json:"default_payment_terms,omitempty"`
	DefaultPaymentTermsType *PaymentTermsType `json:"default_payment_terms_type,omitempty"`
	DefaultPaymentMethod *PaymentMethod `json:"default_payment_method,omitempty"`
	// [Only for client] Bank name.
	BankName NullableString `json:"bank_name,omitempty"`
	// [Only for client] Iban.
	BankIban NullableString `json:"bank_iban,omitempty"`
	// [Only for client] Bank swift code.
	BankSwiftCode NullableString `json:"bank_swift_code,omitempty"`
	// [Only for client] Shipping address.
	ShippingAddress NullableString `json:"shipping_address,omitempty"`
	// [Only for client] Use e-invoices.
	EInvoice NullableBool `json:"e_invoice,omitempty"`
	// [Only for client] E-invoices code.
	EiCode NullableString `json:"ei_code,omitempty"`
	// [Only for client] Has intent declaration.
	HasIntentDeclaration NullableBool `json:"has_intent_declaration,omitempty"`
	// [Only for client] Intent declaration protocol number.
	IntentDeclarationProtocolNumber NullableString `json:"intent_declaration_protocol_number,omitempty"`
	// [Only for client] Intent declaration protocol date.
	IntentDeclarationProtocolDate NullableString `json:"intent_declaration_protocol_date,omitempty"`
	CreatedAt NullableString `json:"created_at,omitempty"`
	UpdatedAt NullableString `json:"updated_at,omitempty"`
}

// NewEntity instantiates a new Entity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntity() *Entity {
	this := Entity{}
	return &this
}

// NewEntityWithDefaults instantiates a new Entity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityWithDefaults() *Entity {
	this := Entity{}
	var defaultPaymentTermsType PaymentTermsType = PaymentTermsTypes.STANDARD
	this.DefaultPaymentTermsType = &defaultPaymentTermsType
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetId() int32 {
	if o == nil || isNil(o.Id.Get()) {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *Entity) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *Entity) SetId(v int32) *Entity {
	o.Id.Set(&v)
	return o
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *Entity) SetIdNil() *Entity {
	o.Id.Set(nil)
	return o
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *Entity) UnsetId() {
	o.Id.Unset()
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetCode() string {
	if o == nil || isNil(o.Code.Get()) {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *Entity) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *Entity) SetCode(v string) *Entity {
	o.Code.Set(&v)
	return o
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *Entity) SetCodeNil() *Entity {
	o.Code.Set(nil)
	return o
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *Entity) UnsetCode() {
	o.Code.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetName() string {
	if o == nil || isNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *Entity) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *Entity) SetName(v string) *Entity {
	o.Name.Set(&v)
	return o
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *Entity) SetNameNil() *Entity {
	o.Name.Set(nil)
	return o
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *Entity) UnsetName() {
	o.Name.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetType() EntityType {
	if o == nil || isNil(o.Type.Get()) {
		var ret EntityType
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetTypeOk() (*EntityType, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *Entity) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableEntityType and assigns it to the Type field.
func (o *Entity) SetType(v EntityType) *Entity {
	o.Type.Set(&v)
	return o
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *Entity) SetTypeNil() *Entity {
	o.Type.Set(nil)
	return o
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *Entity) UnsetType() {
	o.Type.Unset()
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetFirstName() string {
	if o == nil || isNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *Entity) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *Entity) SetFirstName(v string) *Entity {
	o.FirstName.Set(&v)
	return o
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *Entity) SetFirstNameNil() *Entity {
	o.FirstName.Set(nil)
	return o
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *Entity) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetLastName() string {
	if o == nil || isNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *Entity) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *Entity) SetLastName(v string) *Entity {
	o.LastName.Set(&v)
	return o
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *Entity) SetLastNameNil() *Entity {
	o.LastName.Set(nil)
	return o
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *Entity) UnsetLastName() {
	o.LastName.Unset()
}

// GetContactPerson returns the ContactPerson field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetContactPerson() string {
	if o == nil || isNil(o.ContactPerson.Get()) {
		var ret string
		return ret
	}
	return *o.ContactPerson.Get()
}

// GetContactPersonOk returns a tuple with the ContactPerson field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetContactPersonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContactPerson.Get(), o.ContactPerson.IsSet()
}

// HasContactPerson returns a boolean if a field has been set.
func (o *Entity) HasContactPerson() bool {
	if o != nil && o.ContactPerson.IsSet() {
		return true
	}

	return false
}

// SetContactPerson gets a reference to the given NullableString and assigns it to the ContactPerson field.
func (o *Entity) SetContactPerson(v string) *Entity {
	o.ContactPerson.Set(&v)
	return o
}
// SetContactPersonNil sets the value for ContactPerson to be an explicit nil
func (o *Entity) SetContactPersonNil() *Entity {
	o.ContactPerson.Set(nil)
	return o
}

// UnsetContactPerson ensures that no value is present for ContactPerson, not even an explicit nil
func (o *Entity) UnsetContactPerson() {
	o.ContactPerson.Unset()
}

// GetVatNumber returns the VatNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetVatNumber() string {
	if o == nil || isNil(o.VatNumber.Get()) {
		var ret string
		return ret
	}
	return *o.VatNumber.Get()
}

// GetVatNumberOk returns a tuple with the VatNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetVatNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VatNumber.Get(), o.VatNumber.IsSet()
}

// HasVatNumber returns a boolean if a field has been set.
func (o *Entity) HasVatNumber() bool {
	if o != nil && o.VatNumber.IsSet() {
		return true
	}

	return false
}

// SetVatNumber gets a reference to the given NullableString and assigns it to the VatNumber field.
func (o *Entity) SetVatNumber(v string) *Entity {
	o.VatNumber.Set(&v)
	return o
}
// SetVatNumberNil sets the value for VatNumber to be an explicit nil
func (o *Entity) SetVatNumberNil() *Entity {
	o.VatNumber.Set(nil)
	return o
}

// UnsetVatNumber ensures that no value is present for VatNumber, not even an explicit nil
func (o *Entity) UnsetVatNumber() {
	o.VatNumber.Unset()
}

// GetTaxCode returns the TaxCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetTaxCode() string {
	if o == nil || isNil(o.TaxCode.Get()) {
		var ret string
		return ret
	}
	return *o.TaxCode.Get()
}

// GetTaxCodeOk returns a tuple with the TaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetTaxCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxCode.Get(), o.TaxCode.IsSet()
}

// HasTaxCode returns a boolean if a field has been set.
func (o *Entity) HasTaxCode() bool {
	if o != nil && o.TaxCode.IsSet() {
		return true
	}

	return false
}

// SetTaxCode gets a reference to the given NullableString and assigns it to the TaxCode field.
func (o *Entity) SetTaxCode(v string) *Entity {
	o.TaxCode.Set(&v)
	return o
}
// SetTaxCodeNil sets the value for TaxCode to be an explicit nil
func (o *Entity) SetTaxCodeNil() *Entity {
	o.TaxCode.Set(nil)
	return o
}

// UnsetTaxCode ensures that no value is present for TaxCode, not even an explicit nil
func (o *Entity) UnsetTaxCode() {
	o.TaxCode.Unset()
}

// GetAddressStreet returns the AddressStreet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetAddressStreet() string {
	if o == nil || isNil(o.AddressStreet.Get()) {
		var ret string
		return ret
	}
	return *o.AddressStreet.Get()
}

// GetAddressStreetOk returns a tuple with the AddressStreet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetAddressStreetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressStreet.Get(), o.AddressStreet.IsSet()
}

// HasAddressStreet returns a boolean if a field has been set.
func (o *Entity) HasAddressStreet() bool {
	if o != nil && o.AddressStreet.IsSet() {
		return true
	}

	return false
}

// SetAddressStreet gets a reference to the given NullableString and assigns it to the AddressStreet field.
func (o *Entity) SetAddressStreet(v string) *Entity {
	o.AddressStreet.Set(&v)
	return o
}
// SetAddressStreetNil sets the value for AddressStreet to be an explicit nil
func (o *Entity) SetAddressStreetNil() *Entity {
	o.AddressStreet.Set(nil)
	return o
}

// UnsetAddressStreet ensures that no value is present for AddressStreet, not even an explicit nil
func (o *Entity) UnsetAddressStreet() {
	o.AddressStreet.Unset()
}

// GetAddressPostalCode returns the AddressPostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetAddressPostalCode() string {
	if o == nil || isNil(o.AddressPostalCode.Get()) {
		var ret string
		return ret
	}
	return *o.AddressPostalCode.Get()
}

// GetAddressPostalCodeOk returns a tuple with the AddressPostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetAddressPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressPostalCode.Get(), o.AddressPostalCode.IsSet()
}

// HasAddressPostalCode returns a boolean if a field has been set.
func (o *Entity) HasAddressPostalCode() bool {
	if o != nil && o.AddressPostalCode.IsSet() {
		return true
	}

	return false
}

// SetAddressPostalCode gets a reference to the given NullableString and assigns it to the AddressPostalCode field.
func (o *Entity) SetAddressPostalCode(v string) *Entity {
	o.AddressPostalCode.Set(&v)
	return o
}
// SetAddressPostalCodeNil sets the value for AddressPostalCode to be an explicit nil
func (o *Entity) SetAddressPostalCodeNil() *Entity {
	o.AddressPostalCode.Set(nil)
	return o
}

// UnsetAddressPostalCode ensures that no value is present for AddressPostalCode, not even an explicit nil
func (o *Entity) UnsetAddressPostalCode() {
	o.AddressPostalCode.Unset()
}

// GetAddressCity returns the AddressCity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetAddressCity() string {
	if o == nil || isNil(o.AddressCity.Get()) {
		var ret string
		return ret
	}
	return *o.AddressCity.Get()
}

// GetAddressCityOk returns a tuple with the AddressCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetAddressCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressCity.Get(), o.AddressCity.IsSet()
}

// HasAddressCity returns a boolean if a field has been set.
func (o *Entity) HasAddressCity() bool {
	if o != nil && o.AddressCity.IsSet() {
		return true
	}

	return false
}

// SetAddressCity gets a reference to the given NullableString and assigns it to the AddressCity field.
func (o *Entity) SetAddressCity(v string) *Entity {
	o.AddressCity.Set(&v)
	return o
}
// SetAddressCityNil sets the value for AddressCity to be an explicit nil
func (o *Entity) SetAddressCityNil() *Entity {
	o.AddressCity.Set(nil)
	return o
}

// UnsetAddressCity ensures that no value is present for AddressCity, not even an explicit nil
func (o *Entity) UnsetAddressCity() {
	o.AddressCity.Unset()
}

// GetAddressProvince returns the AddressProvince field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetAddressProvince() string {
	if o == nil || isNil(o.AddressProvince.Get()) {
		var ret string
		return ret
	}
	return *o.AddressProvince.Get()
}

// GetAddressProvinceOk returns a tuple with the AddressProvince field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetAddressProvinceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressProvince.Get(), o.AddressProvince.IsSet()
}

// HasAddressProvince returns a boolean if a field has been set.
func (o *Entity) HasAddressProvince() bool {
	if o != nil && o.AddressProvince.IsSet() {
		return true
	}

	return false
}

// SetAddressProvince gets a reference to the given NullableString and assigns it to the AddressProvince field.
func (o *Entity) SetAddressProvince(v string) *Entity {
	o.AddressProvince.Set(&v)
	return o
}
// SetAddressProvinceNil sets the value for AddressProvince to be an explicit nil
func (o *Entity) SetAddressProvinceNil() *Entity {
	o.AddressProvince.Set(nil)
	return o
}

// UnsetAddressProvince ensures that no value is present for AddressProvince, not even an explicit nil
func (o *Entity) UnsetAddressProvince() {
	o.AddressProvince.Unset()
}

// GetAddressExtra returns the AddressExtra field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetAddressExtra() string {
	if o == nil || isNil(o.AddressExtra.Get()) {
		var ret string
		return ret
	}
	return *o.AddressExtra.Get()
}

// GetAddressExtraOk returns a tuple with the AddressExtra field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetAddressExtraOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressExtra.Get(), o.AddressExtra.IsSet()
}

// HasAddressExtra returns a boolean if a field has been set.
func (o *Entity) HasAddressExtra() bool {
	if o != nil && o.AddressExtra.IsSet() {
		return true
	}

	return false
}

// SetAddressExtra gets a reference to the given NullableString and assigns it to the AddressExtra field.
func (o *Entity) SetAddressExtra(v string) *Entity {
	o.AddressExtra.Set(&v)
	return o
}
// SetAddressExtraNil sets the value for AddressExtra to be an explicit nil
func (o *Entity) SetAddressExtraNil() *Entity {
	o.AddressExtra.Set(nil)
	return o
}

// UnsetAddressExtra ensures that no value is present for AddressExtra, not even an explicit nil
func (o *Entity) UnsetAddressExtra() {
	o.AddressExtra.Unset()
}

// GetCountry returns the Country field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetCountry() string {
	if o == nil || isNil(o.Country.Get()) {
		var ret string
		return ret
	}
	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// HasCountry returns a boolean if a field has been set.
func (o *Entity) HasCountry() bool {
	if o != nil && o.Country.IsSet() {
		return true
	}

	return false
}

// SetCountry gets a reference to the given NullableString and assigns it to the Country field.
func (o *Entity) SetCountry(v string) *Entity {
	o.Country.Set(&v)
	return o
}
// SetCountryNil sets the value for Country to be an explicit nil
func (o *Entity) SetCountryNil() *Entity {
	o.Country.Set(nil)
	return o
}

// UnsetCountry ensures that no value is present for Country, not even an explicit nil
func (o *Entity) UnsetCountry() {
	o.Country.Unset()
}

// GetCountryIso returns the CountryIso field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetCountryIso() string {
	if o == nil || isNil(o.CountryIso.Get()) {
		var ret string
		return ret
	}
	return *o.CountryIso.Get()
}

// GetCountryIsoOk returns a tuple with the CountryIso field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetCountryIsoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryIso.Get(), o.CountryIso.IsSet()
}

// HasCountryIso returns a boolean if a field has been set.
func (o *Entity) HasCountryIso() bool {
	if o != nil && o.CountryIso.IsSet() {
		return true
	}

	return false
}

// SetCountryIso gets a reference to the given NullableString and assigns it to the CountryIso field.
func (o *Entity) SetCountryIso(v string) *Entity {
	o.CountryIso.Set(&v)
	return o
}
// SetCountryIsoNil sets the value for CountryIso to be an explicit nil
func (o *Entity) SetCountryIsoNil() *Entity {
	o.CountryIso.Set(nil)
	return o
}

// UnsetCountryIso ensures that no value is present for CountryIso, not even an explicit nil
func (o *Entity) UnsetCountryIso() {
	o.CountryIso.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetEmail() string {
	if o == nil || isNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *Entity) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *Entity) SetEmail(v string) *Entity {
	o.Email.Set(&v)
	return o
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *Entity) SetEmailNil() *Entity {
	o.Email.Set(nil)
	return o
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *Entity) UnsetEmail() {
	o.Email.Unset()
}

// GetCertifiedEmail returns the CertifiedEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetCertifiedEmail() string {
	if o == nil || isNil(o.CertifiedEmail.Get()) {
		var ret string
		return ret
	}
	return *o.CertifiedEmail.Get()
}

// GetCertifiedEmailOk returns a tuple with the CertifiedEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetCertifiedEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CertifiedEmail.Get(), o.CertifiedEmail.IsSet()
}

// HasCertifiedEmail returns a boolean if a field has been set.
func (o *Entity) HasCertifiedEmail() bool {
	if o != nil && o.CertifiedEmail.IsSet() {
		return true
	}

	return false
}

// SetCertifiedEmail gets a reference to the given NullableString and assigns it to the CertifiedEmail field.
func (o *Entity) SetCertifiedEmail(v string) *Entity {
	o.CertifiedEmail.Set(&v)
	return o
}
// SetCertifiedEmailNil sets the value for CertifiedEmail to be an explicit nil
func (o *Entity) SetCertifiedEmailNil() *Entity {
	o.CertifiedEmail.Set(nil)
	return o
}

// UnsetCertifiedEmail ensures that no value is present for CertifiedEmail, not even an explicit nil
func (o *Entity) UnsetCertifiedEmail() {
	o.CertifiedEmail.Unset()
}

// GetPhone returns the Phone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetPhone() string {
	if o == nil || isNil(o.Phone.Get()) {
		var ret string
		return ret
	}
	return *o.Phone.Get()
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phone.Get(), o.Phone.IsSet()
}

// HasPhone returns a boolean if a field has been set.
func (o *Entity) HasPhone() bool {
	if o != nil && o.Phone.IsSet() {
		return true
	}

	return false
}

// SetPhone gets a reference to the given NullableString and assigns it to the Phone field.
func (o *Entity) SetPhone(v string) *Entity {
	o.Phone.Set(&v)
	return o
}
// SetPhoneNil sets the value for Phone to be an explicit nil
func (o *Entity) SetPhoneNil() *Entity {
	o.Phone.Set(nil)
	return o
}

// UnsetPhone ensures that no value is present for Phone, not even an explicit nil
func (o *Entity) UnsetPhone() {
	o.Phone.Unset()
}

// GetFax returns the Fax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetFax() string {
	if o == nil || isNil(o.Fax.Get()) {
		var ret string
		return ret
	}
	return *o.Fax.Get()
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetFaxOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fax.Get(), o.Fax.IsSet()
}

// HasFax returns a boolean if a field has been set.
func (o *Entity) HasFax() bool {
	if o != nil && o.Fax.IsSet() {
		return true
	}

	return false
}

// SetFax gets a reference to the given NullableString and assigns it to the Fax field.
func (o *Entity) SetFax(v string) *Entity {
	o.Fax.Set(&v)
	return o
}
// SetFaxNil sets the value for Fax to be an explicit nil
func (o *Entity) SetFaxNil() *Entity {
	o.Fax.Set(nil)
	return o
}

// UnsetFax ensures that no value is present for Fax, not even an explicit nil
func (o *Entity) UnsetFax() {
	o.Fax.Unset()
}

// GetNotes returns the Notes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetNotes() string {
	if o == nil || isNil(o.Notes.Get()) {
		var ret string
		return ret
	}
	return *o.Notes.Get()
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetNotesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Notes.Get(), o.Notes.IsSet()
}

// HasNotes returns a boolean if a field has been set.
func (o *Entity) HasNotes() bool {
	if o != nil && o.Notes.IsSet() {
		return true
	}

	return false
}

// SetNotes gets a reference to the given NullableString and assigns it to the Notes field.
func (o *Entity) SetNotes(v string) *Entity {
	o.Notes.Set(&v)
	return o
}
// SetNotesNil sets the value for Notes to be an explicit nil
func (o *Entity) SetNotesNil() *Entity {
	o.Notes.Set(nil)
	return o
}

// UnsetNotes ensures that no value is present for Notes, not even an explicit nil
func (o *Entity) UnsetNotes() {
	o.Notes.Unset()
}

// GetDefaultVat returns the DefaultVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetDefaultVat() VatType {
	if o == nil || isNil(o.DefaultVat.Get()) {
		var ret VatType
		return ret
	}
	return *o.DefaultVat.Get()
}

// GetDefaultVatOk returns a tuple with the DefaultVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetDefaultVatOk() (*VatType, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultVat.Get(), o.DefaultVat.IsSet()
}

// HasDefaultVat returns a boolean if a field has been set.
func (o *Entity) HasDefaultVat() bool {
	if o != nil && o.DefaultVat.IsSet() {
		return true
	}

	return false
}

// SetDefaultVat gets a reference to the given NullableVatType and assigns it to the DefaultVat field.
func (o *Entity) SetDefaultVat(v VatType) *Entity {
	o.DefaultVat.Set(&v)
	return o
}
// SetDefaultVatNil sets the value for DefaultVat to be an explicit nil
func (o *Entity) SetDefaultVatNil() *Entity {
	o.DefaultVat.Set(nil)
	return o
}

// UnsetDefaultVat ensures that no value is present for DefaultVat, not even an explicit nil
func (o *Entity) UnsetDefaultVat() {
	o.DefaultVat.Unset()
}

// GetDefaultPaymentTerms returns the DefaultPaymentTerms field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetDefaultPaymentTerms() int32 {
	if o == nil || isNil(o.DefaultPaymentTerms.Get()) {
		var ret int32
		return ret
	}
	return *o.DefaultPaymentTerms.Get()
}

// GetDefaultPaymentTermsOk returns a tuple with the DefaultPaymentTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetDefaultPaymentTermsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultPaymentTerms.Get(), o.DefaultPaymentTerms.IsSet()
}

// HasDefaultPaymentTerms returns a boolean if a field has been set.
func (o *Entity) HasDefaultPaymentTerms() bool {
	if o != nil && o.DefaultPaymentTerms.IsSet() {
		return true
	}

	return false
}

// SetDefaultPaymentTerms gets a reference to the given NullableInt32 and assigns it to the DefaultPaymentTerms field.
func (o *Entity) SetDefaultPaymentTerms(v int32) *Entity {
	o.DefaultPaymentTerms.Set(&v)
	return o
}
// SetDefaultPaymentTermsNil sets the value for DefaultPaymentTerms to be an explicit nil
func (o *Entity) SetDefaultPaymentTermsNil() *Entity {
	o.DefaultPaymentTerms.Set(nil)
	return o
}

// UnsetDefaultPaymentTerms ensures that no value is present for DefaultPaymentTerms, not even an explicit nil
func (o *Entity) UnsetDefaultPaymentTerms() {
	o.DefaultPaymentTerms.Unset()
}

// GetDefaultPaymentTermsType returns the DefaultPaymentTermsType field value if set, zero value otherwise.
func (o *Entity) GetDefaultPaymentTermsType() PaymentTermsType {
	if o == nil || isNil(o.DefaultPaymentTermsType) {
		var ret PaymentTermsType
		return ret
	}
	return *o.DefaultPaymentTermsType
}

// GetDefaultPaymentTermsTypeOk returns a tuple with the DefaultPaymentTermsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entity) GetDefaultPaymentTermsTypeOk() (*PaymentTermsType, bool) {
	if o == nil || isNil(o.DefaultPaymentTermsType) {
		return nil, false
	}
	return o.DefaultPaymentTermsType, true
}

// HasDefaultPaymentTermsType returns a boolean if a field has been set.
func (o *Entity) HasDefaultPaymentTermsType() bool {
	if o != nil && !isNil(o.DefaultPaymentTermsType) {
		return true
	}

	return false
}

// SetDefaultPaymentTermsType gets a reference to the given PaymentTermsType and assigns it to the DefaultPaymentTermsType field.
func (o *Entity) SetDefaultPaymentTermsType(v PaymentTermsType) *Entity {
	o.DefaultPaymentTermsType = &v
	return o
}

// GetDefaultPaymentMethod returns the DefaultPaymentMethod field value if set, zero value otherwise.
func (o *Entity) GetDefaultPaymentMethod() PaymentMethod {
	if o == nil || isNil(o.DefaultPaymentMethod) {
		var ret PaymentMethod
		return ret
	}
	return *o.DefaultPaymentMethod
}

// GetDefaultPaymentMethodOk returns a tuple with the DefaultPaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entity) GetDefaultPaymentMethodOk() (*PaymentMethod, bool) {
	if o == nil || isNil(o.DefaultPaymentMethod) {
		return nil, false
	}
	return o.DefaultPaymentMethod, true
}

// HasDefaultPaymentMethod returns a boolean if a field has been set.
func (o *Entity) HasDefaultPaymentMethod() bool {
	if o != nil && !isNil(o.DefaultPaymentMethod) {
		return true
	}

	return false
}

// SetDefaultPaymentMethod gets a reference to the given PaymentMethod and assigns it to the DefaultPaymentMethod field.
func (o *Entity) SetDefaultPaymentMethod(v PaymentMethod) *Entity {
	o.DefaultPaymentMethod = &v
	return o
}

// GetBankName returns the BankName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetBankName() string {
	if o == nil || isNil(o.BankName.Get()) {
		var ret string
		return ret
	}
	return *o.BankName.Get()
}

// GetBankNameOk returns a tuple with the BankName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetBankNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BankName.Get(), o.BankName.IsSet()
}

// HasBankName returns a boolean if a field has been set.
func (o *Entity) HasBankName() bool {
	if o != nil && o.BankName.IsSet() {
		return true
	}

	return false
}

// SetBankName gets a reference to the given NullableString and assigns it to the BankName field.
func (o *Entity) SetBankName(v string) *Entity {
	o.BankName.Set(&v)
	return o
}
// SetBankNameNil sets the value for BankName to be an explicit nil
func (o *Entity) SetBankNameNil() *Entity {
	o.BankName.Set(nil)
	return o
}

// UnsetBankName ensures that no value is present for BankName, not even an explicit nil
func (o *Entity) UnsetBankName() {
	o.BankName.Unset()
}

// GetBankIban returns the BankIban field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetBankIban() string {
	if o == nil || isNil(o.BankIban.Get()) {
		var ret string
		return ret
	}
	return *o.BankIban.Get()
}

// GetBankIbanOk returns a tuple with the BankIban field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetBankIbanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BankIban.Get(), o.BankIban.IsSet()
}

// HasBankIban returns a boolean if a field has been set.
func (o *Entity) HasBankIban() bool {
	if o != nil && o.BankIban.IsSet() {
		return true
	}

	return false
}

// SetBankIban gets a reference to the given NullableString and assigns it to the BankIban field.
func (o *Entity) SetBankIban(v string) *Entity {
	o.BankIban.Set(&v)
	return o
}
// SetBankIbanNil sets the value for BankIban to be an explicit nil
func (o *Entity) SetBankIbanNil() *Entity {
	o.BankIban.Set(nil)
	return o
}

// UnsetBankIban ensures that no value is present for BankIban, not even an explicit nil
func (o *Entity) UnsetBankIban() {
	o.BankIban.Unset()
}

// GetBankSwiftCode returns the BankSwiftCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetBankSwiftCode() string {
	if o == nil || isNil(o.BankSwiftCode.Get()) {
		var ret string
		return ret
	}
	return *o.BankSwiftCode.Get()
}

// GetBankSwiftCodeOk returns a tuple with the BankSwiftCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetBankSwiftCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BankSwiftCode.Get(), o.BankSwiftCode.IsSet()
}

// HasBankSwiftCode returns a boolean if a field has been set.
func (o *Entity) HasBankSwiftCode() bool {
	if o != nil && o.BankSwiftCode.IsSet() {
		return true
	}

	return false
}

// SetBankSwiftCode gets a reference to the given NullableString and assigns it to the BankSwiftCode field.
func (o *Entity) SetBankSwiftCode(v string) *Entity {
	o.BankSwiftCode.Set(&v)
	return o
}
// SetBankSwiftCodeNil sets the value for BankSwiftCode to be an explicit nil
func (o *Entity) SetBankSwiftCodeNil() *Entity {
	o.BankSwiftCode.Set(nil)
	return o
}

// UnsetBankSwiftCode ensures that no value is present for BankSwiftCode, not even an explicit nil
func (o *Entity) UnsetBankSwiftCode() {
	o.BankSwiftCode.Unset()
}

// GetShippingAddress returns the ShippingAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetShippingAddress() string {
	if o == nil || isNil(o.ShippingAddress.Get()) {
		var ret string
		return ret
	}
	return *o.ShippingAddress.Get()
}

// GetShippingAddressOk returns a tuple with the ShippingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetShippingAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingAddress.Get(), o.ShippingAddress.IsSet()
}

// HasShippingAddress returns a boolean if a field has been set.
func (o *Entity) HasShippingAddress() bool {
	if o != nil && o.ShippingAddress.IsSet() {
		return true
	}

	return false
}

// SetShippingAddress gets a reference to the given NullableString and assigns it to the ShippingAddress field.
func (o *Entity) SetShippingAddress(v string) *Entity {
	o.ShippingAddress.Set(&v)
	return o
}
// SetShippingAddressNil sets the value for ShippingAddress to be an explicit nil
func (o *Entity) SetShippingAddressNil() *Entity {
	o.ShippingAddress.Set(nil)
	return o
}

// UnsetShippingAddress ensures that no value is present for ShippingAddress, not even an explicit nil
func (o *Entity) UnsetShippingAddress() {
	o.ShippingAddress.Unset()
}

// GetEInvoice returns the EInvoice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetEInvoice() bool {
	if o == nil || isNil(o.EInvoice.Get()) {
		var ret bool
		return ret
	}
	return *o.EInvoice.Get()
}

// GetEInvoiceOk returns a tuple with the EInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetEInvoiceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EInvoice.Get(), o.EInvoice.IsSet()
}

// HasEInvoice returns a boolean if a field has been set.
func (o *Entity) HasEInvoice() bool {
	if o != nil && o.EInvoice.IsSet() {
		return true
	}

	return false
}

// SetEInvoice gets a reference to the given NullableBool and assigns it to the EInvoice field.
func (o *Entity) SetEInvoice(v bool) *Entity {
	o.EInvoice.Set(&v)
	return o
}
// SetEInvoiceNil sets the value for EInvoice to be an explicit nil
func (o *Entity) SetEInvoiceNil() *Entity {
	o.EInvoice.Set(nil)
	return o
}

// UnsetEInvoice ensures that no value is present for EInvoice, not even an explicit nil
func (o *Entity) UnsetEInvoice() {
	o.EInvoice.Unset()
}

// GetEiCode returns the EiCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetEiCode() string {
	if o == nil || isNil(o.EiCode.Get()) {
		var ret string
		return ret
	}
	return *o.EiCode.Get()
}

// GetEiCodeOk returns a tuple with the EiCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetEiCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EiCode.Get(), o.EiCode.IsSet()
}

// HasEiCode returns a boolean if a field has been set.
func (o *Entity) HasEiCode() bool {
	if o != nil && o.EiCode.IsSet() {
		return true
	}

	return false
}

// SetEiCode gets a reference to the given NullableString and assigns it to the EiCode field.
func (o *Entity) SetEiCode(v string) *Entity {
	o.EiCode.Set(&v)
	return o
}
// SetEiCodeNil sets the value for EiCode to be an explicit nil
func (o *Entity) SetEiCodeNil() *Entity {
	o.EiCode.Set(nil)
	return o
}

// UnsetEiCode ensures that no value is present for EiCode, not even an explicit nil
func (o *Entity) UnsetEiCode() {
	o.EiCode.Unset()
}

// GetHasIntentDeclaration returns the HasIntentDeclaration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetHasIntentDeclaration() bool {
	if o == nil || isNil(o.HasIntentDeclaration.Get()) {
		var ret bool
		return ret
	}
	return *o.HasIntentDeclaration.Get()
}

// GetHasIntentDeclarationOk returns a tuple with the HasIntentDeclaration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetHasIntentDeclarationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasIntentDeclaration.Get(), o.HasIntentDeclaration.IsSet()
}

// HasHasIntentDeclaration returns a boolean if a field has been set.
func (o *Entity) HasHasIntentDeclaration() bool {
	if o != nil && o.HasIntentDeclaration.IsSet() {
		return true
	}

	return false
}

// SetHasIntentDeclaration gets a reference to the given NullableBool and assigns it to the HasIntentDeclaration field.
func (o *Entity) SetHasIntentDeclaration(v bool) *Entity {
	o.HasIntentDeclaration.Set(&v)
	return o
}
// SetHasIntentDeclarationNil sets the value for HasIntentDeclaration to be an explicit nil
func (o *Entity) SetHasIntentDeclarationNil() *Entity {
	o.HasIntentDeclaration.Set(nil)
	return o
}

// UnsetHasIntentDeclaration ensures that no value is present for HasIntentDeclaration, not even an explicit nil
func (o *Entity) UnsetHasIntentDeclaration() {
	o.HasIntentDeclaration.Unset()
}

// GetIntentDeclarationProtocolNumber returns the IntentDeclarationProtocolNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetIntentDeclarationProtocolNumber() string {
	if o == nil || isNil(o.IntentDeclarationProtocolNumber.Get()) {
		var ret string
		return ret
	}
	return *o.IntentDeclarationProtocolNumber.Get()
}

// GetIntentDeclarationProtocolNumberOk returns a tuple with the IntentDeclarationProtocolNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetIntentDeclarationProtocolNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IntentDeclarationProtocolNumber.Get(), o.IntentDeclarationProtocolNumber.IsSet()
}

// HasIntentDeclarationProtocolNumber returns a boolean if a field has been set.
func (o *Entity) HasIntentDeclarationProtocolNumber() bool {
	if o != nil && o.IntentDeclarationProtocolNumber.IsSet() {
		return true
	}

	return false
}

// SetIntentDeclarationProtocolNumber gets a reference to the given NullableString and assigns it to the IntentDeclarationProtocolNumber field.
func (o *Entity) SetIntentDeclarationProtocolNumber(v string) *Entity {
	o.IntentDeclarationProtocolNumber.Set(&v)
	return o
}
// SetIntentDeclarationProtocolNumberNil sets the value for IntentDeclarationProtocolNumber to be an explicit nil
func (o *Entity) SetIntentDeclarationProtocolNumberNil() *Entity {
	o.IntentDeclarationProtocolNumber.Set(nil)
	return o
}

// UnsetIntentDeclarationProtocolNumber ensures that no value is present for IntentDeclarationProtocolNumber, not even an explicit nil
func (o *Entity) UnsetIntentDeclarationProtocolNumber() {
	o.IntentDeclarationProtocolNumber.Unset()
}

// GetIntentDeclarationProtocolDate returns the IntentDeclarationProtocolDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetIntentDeclarationProtocolDate() string {
	if o == nil || isNil(o.IntentDeclarationProtocolDate.Get()) {
		var ret string
		return ret
	}
	return *o.IntentDeclarationProtocolDate.Get()
}

// GetIntentDeclarationProtocolDateOk returns a tuple with the IntentDeclarationProtocolDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetIntentDeclarationProtocolDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IntentDeclarationProtocolDate.Get(), o.IntentDeclarationProtocolDate.IsSet()
}

// HasIntentDeclarationProtocolDate returns a boolean if a field has been set.
func (o *Entity) HasIntentDeclarationProtocolDate() bool {
	if o != nil && o.IntentDeclarationProtocolDate.IsSet() {
		return true
	}

	return false
}

// SetIntentDeclarationProtocolDate gets a reference to the given NullableString and assigns it to the IntentDeclarationProtocolDate field.
func (o *Entity) SetIntentDeclarationProtocolDate(v string) *Entity {
	o.IntentDeclarationProtocolDate.Set(&v)
	return o
}
// SetIntentDeclarationProtocolDateNil sets the value for IntentDeclarationProtocolDate to be an explicit nil
func (o *Entity) SetIntentDeclarationProtocolDateNil() *Entity {
	o.IntentDeclarationProtocolDate.Set(nil)
	return o
}

// UnsetIntentDeclarationProtocolDate ensures that no value is present for IntentDeclarationProtocolDate, not even an explicit nil
func (o *Entity) UnsetIntentDeclarationProtocolDate() {
	o.IntentDeclarationProtocolDate.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetCreatedAt() string {
	if o == nil || isNil(o.CreatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Entity) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableString and assigns it to the CreatedAt field.
func (o *Entity) SetCreatedAt(v string) *Entity {
	o.CreatedAt.Set(&v)
	return o
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *Entity) SetCreatedAtNil() *Entity {
	o.CreatedAt.Set(nil)
	return o
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *Entity) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Entity) GetUpdatedAt() string {
	if o == nil || isNil(o.UpdatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Entity) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Entity) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableString and assigns it to the UpdatedAt field.
func (o *Entity) SetUpdatedAt(v string) *Entity {
	o.UpdatedAt.Set(&v)
	return o
}
// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *Entity) SetUpdatedAtNil() *Entity {
	o.UpdatedAt.Set(nil)
	return o
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *Entity) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

func (o Entity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.FirstName.IsSet() {
		toSerialize["first_name"] = o.FirstName.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["last_name"] = o.LastName.Get()
	}
	if o.ContactPerson.IsSet() {
		toSerialize["contact_person"] = o.ContactPerson.Get()
	}
	if o.VatNumber.IsSet() {
		toSerialize["vat_number"] = o.VatNumber.Get()
	}
	if o.TaxCode.IsSet() {
		toSerialize["tax_code"] = o.TaxCode.Get()
	}
	if o.AddressStreet.IsSet() {
		toSerialize["address_street"] = o.AddressStreet.Get()
	}
	if o.AddressPostalCode.IsSet() {
		toSerialize["address_postal_code"] = o.AddressPostalCode.Get()
	}
	if o.AddressCity.IsSet() {
		toSerialize["address_city"] = o.AddressCity.Get()
	}
	if o.AddressProvince.IsSet() {
		toSerialize["address_province"] = o.AddressProvince.Get()
	}
	if o.AddressExtra.IsSet() {
		toSerialize["address_extra"] = o.AddressExtra.Get()
	}
	if o.Country.IsSet() {
		toSerialize["country"] = o.Country.Get()
	}
	if o.CountryIso.IsSet() {
		toSerialize["country_iso"] = o.CountryIso.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.CertifiedEmail.IsSet() {
		toSerialize["certified_email"] = o.CertifiedEmail.Get()
	}
	if o.Phone.IsSet() {
		toSerialize["phone"] = o.Phone.Get()
	}
	if o.Fax.IsSet() {
		toSerialize["fax"] = o.Fax.Get()
	}
	if o.Notes.IsSet() {
		toSerialize["notes"] = o.Notes.Get()
	}
	if o.DefaultVat.IsSet() {
		toSerialize["default_vat"] = o.DefaultVat.Get()
	}
	if o.DefaultPaymentTerms.IsSet() {
		toSerialize["default_payment_terms"] = o.DefaultPaymentTerms.Get()
	}
	if !isNil(o.DefaultPaymentTermsType) {
		toSerialize["default_payment_terms_type"] = o.DefaultPaymentTermsType
	}
	if !isNil(o.DefaultPaymentMethod) {
		toSerialize["default_payment_method"] = o.DefaultPaymentMethod
	}
	if o.BankName.IsSet() {
		toSerialize["bank_name"] = o.BankName.Get()
	}
	if o.BankIban.IsSet() {
		toSerialize["bank_iban"] = o.BankIban.Get()
	}
	if o.BankSwiftCode.IsSet() {
		toSerialize["bank_swift_code"] = o.BankSwiftCode.Get()
	}
	if o.ShippingAddress.IsSet() {
		toSerialize["shipping_address"] = o.ShippingAddress.Get()
	}
	if o.EInvoice.IsSet() {
		toSerialize["e_invoice"] = o.EInvoice.Get()
	}
	if o.EiCode.IsSet() {
		toSerialize["ei_code"] = o.EiCode.Get()
	}
	if o.HasIntentDeclaration.IsSet() {
		toSerialize["has_intent_declaration"] = o.HasIntentDeclaration.Get()
	}
	if o.IntentDeclarationProtocolNumber.IsSet() {
		toSerialize["intent_declaration_protocol_number"] = o.IntentDeclarationProtocolNumber.Get()
	}
	if o.IntentDeclarationProtocolDate.IsSet() {
		toSerialize["intent_declaration_protocol_date"] = o.IntentDeclarationProtocolDate.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableEntity struct {
	value *Entity
	isSet bool
}

func (v NullableEntity) Get() *Entity {
	return v.value
}

func (v *NullableEntity) Set(val *Entity) {
	v.value = val
	v.isSet = true
}

func (v NullableEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntity(val *Entity) *NullableEntity {
	return &NullableEntity{value: val, isSet: true}
}

func (v NullableEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


