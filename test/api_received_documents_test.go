/*
Fatture in Cloud API v2 - API Reference

Testing ReceivedDocumentsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package fattureincloud

import (
    "context"
    "github.com/stretchr/testify/assert"
    "github.com/stretchr/testify/require"
    "testing"
    fattureincloud "./openapi"
)

func Test_fattureincloud_ReceivedDocumentsApiService(t *testing.T) {

    configuration := fattureincloud.NewConfiguration()
    apiClient := fattureincloud.NewAPIClient(configuration)

    t.Run("Test ReceivedDocumentsApiService CreateReceivedDocument", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var companyId int32

        resp, httpRes, err := apiClient.ReceivedDocumentsApi.CreateReceivedDocument(context.Background(), companyId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ReceivedDocumentsApiService DeleteReceivedDocument", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var companyId int32
        var documentId int32

        resp, httpRes, err := apiClient.ReceivedDocumentsApi.DeleteReceivedDocument(context.Background(), companyId, documentId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ReceivedDocumentsApiService DeleteReceivedDocumentAttachment", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var companyId int32
        var documentId int32

        resp, httpRes, err := apiClient.ReceivedDocumentsApi.DeleteReceivedDocumentAttachment(context.Background(), companyId, documentId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ReceivedDocumentsApiService GetExistingReceivedDocumentTotals", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var companyId int32
        var documentId int32

        resp, httpRes, err := apiClient.ReceivedDocumentsApi.GetExistingReceivedDocumentTotals(context.Background(), companyId, documentId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ReceivedDocumentsApiService GetNewReceivedDocumentTotals", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var companyId int32

        resp, httpRes, err := apiClient.ReceivedDocumentsApi.GetNewReceivedDocumentTotals(context.Background(), companyId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ReceivedDocumentsApiService GetReceivedDocument", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var companyId int32
        var documentId int32

        resp, httpRes, err := apiClient.ReceivedDocumentsApi.GetReceivedDocument(context.Background(), companyId, documentId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ReceivedDocumentsApiService GetReceivedDocumentPreCreateInfo", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var companyId int32

        resp, httpRes, err := apiClient.ReceivedDocumentsApi.GetReceivedDocumentPreCreateInfo(context.Background(), companyId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ReceivedDocumentsApiService ListReceivedDocuments", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var companyId int32

        resp, httpRes, err := apiClient.ReceivedDocumentsApi.ListReceivedDocuments(context.Background(), companyId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ReceivedDocumentsApiService ModifyReceivedDocument", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var companyId int32
        var documentId int32

        resp, httpRes, err := apiClient.ReceivedDocumentsApi.ModifyReceivedDocument(context.Background(), companyId, documentId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ReceivedDocumentsApiService UploadReceivedDocumentAttachment", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var companyId int32

        resp, httpRes, err := apiClient.ReceivedDocumentsApi.UploadReceivedDocumentAttachment(context.Background(), companyId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

}
