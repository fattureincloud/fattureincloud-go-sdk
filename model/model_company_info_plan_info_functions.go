/*
Fatture in Cloud API v2 - API Reference

Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.

API version: 2.1.3
Contact: info@fattureincloud.it
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// checks if the CompanyInfoPlanInfoFunctions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyInfoPlanInfoFunctions{}

// CompanyInfoPlanInfoFunctions Access to functions for this company.
type CompanyInfoPlanInfoFunctions struct {
Archive NullableBool `json:"archive,omitempty"`
Cerved NullableBool `json:"cerved,omitempty"`
DocumentAttachments NullableBool `json:"document_attachments,omitempty"`
EInvoice NullableBool `json:"e_invoice,omitempty"`
Genius NullableBool `json:"genius,omitempty"`
MailTracking NullableBool `json:"mail_tracking,omitempty"`
PaymentNotifications NullableBool `json:"payment_notifications,omitempty"`
Paypal NullableBool `json:"paypal,omitempty"`
Receipts NullableBool `json:"receipts,omitempty"`
Recurring NullableBool `json:"recurring,omitempty"`
Smtp NullableBool `json:"smtp,omitempty"`
Sofort NullableBool `json:"sofort,omitempty"`
Stock NullableBool `json:"stock,omitempty"`
Subaccounts NullableBool `json:"subaccounts,omitempty"`
TesseraSanitaria NullableBool `json:"tessera_sanitaria,omitempty"`
TsDigital NullableBool `json:"ts_digital,omitempty"`
TsInvoiceTrading NullableBool `json:"ts_invoice_trading,omitempty"`
TsPay NullableBool `json:"ts_pay,omitempty"`
}

// NewCompanyInfoPlanInfoFunctions instantiates a new CompanyInfoPlanInfoFunctions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyInfoPlanInfoFunctions() *CompanyInfoPlanInfoFunctions {
	this := CompanyInfoPlanInfoFunctions{}
	return &this
}

// NewCompanyInfoPlanInfoFunctionsWithDefaults instantiates a new CompanyInfoPlanInfoFunctions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyInfoPlanInfoFunctionsWithDefaults() *CompanyInfoPlanInfoFunctions {
	this := CompanyInfoPlanInfoFunctions{}
	return &this
}

// GetArchive returns the Archive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetArchive() bool {
	if o == nil || IsNil(o.Archive.Get()) {
		var ret bool
		return ret
	}
	return *o.Archive.Get()
}

// GetArchiveOk returns a tuple with the Archive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetArchiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Archive.Get(), o.Archive.IsSet()
}

// HasArchive returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasArchive() bool {
	if o != nil && o.Archive.IsSet() {
		return true
	}

	return false
}

// SetArchive gets a reference to the given NullableBool and assigns it to the Archive field.
func (o *CompanyInfoPlanInfoFunctions) SetArchive(v bool) *CompanyInfoPlanInfoFunctions {
	o.Archive.Set(&v)
        return o
}
// SetArchiveNil sets the value for Archive to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetArchiveNil() *CompanyInfoPlanInfoFunctions {
	o.Archive.Set(nil)
    return o
}

// UnsetArchive ensures that no value is present for Archive, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetArchive() {
	o.Archive.Unset()
}

// GetCerved returns the Cerved field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetCerved() bool {
	if o == nil || IsNil(o.Cerved.Get()) {
		var ret bool
		return ret
	}
	return *o.Cerved.Get()
}

// GetCervedOk returns a tuple with the Cerved field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetCervedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cerved.Get(), o.Cerved.IsSet()
}

// HasCerved returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasCerved() bool {
	if o != nil && o.Cerved.IsSet() {
		return true
	}

	return false
}

// SetCerved gets a reference to the given NullableBool and assigns it to the Cerved field.
func (o *CompanyInfoPlanInfoFunctions) SetCerved(v bool) *CompanyInfoPlanInfoFunctions {
	o.Cerved.Set(&v)
        return o
}
// SetCervedNil sets the value for Cerved to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetCervedNil() *CompanyInfoPlanInfoFunctions {
	o.Cerved.Set(nil)
    return o
}

// UnsetCerved ensures that no value is present for Cerved, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetCerved() {
	o.Cerved.Unset()
}

// GetDocumentAttachments returns the DocumentAttachments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetDocumentAttachments() bool {
	if o == nil || IsNil(o.DocumentAttachments.Get()) {
		var ret bool
		return ret
	}
	return *o.DocumentAttachments.Get()
}

// GetDocumentAttachmentsOk returns a tuple with the DocumentAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetDocumentAttachmentsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DocumentAttachments.Get(), o.DocumentAttachments.IsSet()
}

// HasDocumentAttachments returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasDocumentAttachments() bool {
	if o != nil && o.DocumentAttachments.IsSet() {
		return true
	}

	return false
}

// SetDocumentAttachments gets a reference to the given NullableBool and assigns it to the DocumentAttachments field.
func (o *CompanyInfoPlanInfoFunctions) SetDocumentAttachments(v bool) *CompanyInfoPlanInfoFunctions {
	o.DocumentAttachments.Set(&v)
        return o
}
// SetDocumentAttachmentsNil sets the value for DocumentAttachments to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetDocumentAttachmentsNil() *CompanyInfoPlanInfoFunctions {
	o.DocumentAttachments.Set(nil)
    return o
}

// UnsetDocumentAttachments ensures that no value is present for DocumentAttachments, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetDocumentAttachments() {
	o.DocumentAttachments.Unset()
}

// GetEInvoice returns the EInvoice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetEInvoice() bool {
	if o == nil || IsNil(o.EInvoice.Get()) {
		var ret bool
		return ret
	}
	return *o.EInvoice.Get()
}

// GetEInvoiceOk returns a tuple with the EInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetEInvoiceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EInvoice.Get(), o.EInvoice.IsSet()
}

// HasEInvoice returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasEInvoice() bool {
	if o != nil && o.EInvoice.IsSet() {
		return true
	}

	return false
}

// SetEInvoice gets a reference to the given NullableBool and assigns it to the EInvoice field.
func (o *CompanyInfoPlanInfoFunctions) SetEInvoice(v bool) *CompanyInfoPlanInfoFunctions {
	o.EInvoice.Set(&v)
        return o
}
// SetEInvoiceNil sets the value for EInvoice to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetEInvoiceNil() *CompanyInfoPlanInfoFunctions {
	o.EInvoice.Set(nil)
    return o
}

// UnsetEInvoice ensures that no value is present for EInvoice, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetEInvoice() {
	o.EInvoice.Unset()
}

// GetGenius returns the Genius field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetGenius() bool {
	if o == nil || IsNil(o.Genius.Get()) {
		var ret bool
		return ret
	}
	return *o.Genius.Get()
}

// GetGeniusOk returns a tuple with the Genius field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetGeniusOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Genius.Get(), o.Genius.IsSet()
}

// HasGenius returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasGenius() bool {
	if o != nil && o.Genius.IsSet() {
		return true
	}

	return false
}

// SetGenius gets a reference to the given NullableBool and assigns it to the Genius field.
func (o *CompanyInfoPlanInfoFunctions) SetGenius(v bool) *CompanyInfoPlanInfoFunctions {
	o.Genius.Set(&v)
        return o
}
// SetGeniusNil sets the value for Genius to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetGeniusNil() *CompanyInfoPlanInfoFunctions {
	o.Genius.Set(nil)
    return o
}

// UnsetGenius ensures that no value is present for Genius, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetGenius() {
	o.Genius.Unset()
}

// GetMailTracking returns the MailTracking field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetMailTracking() bool {
	if o == nil || IsNil(o.MailTracking.Get()) {
		var ret bool
		return ret
	}
	return *o.MailTracking.Get()
}

// GetMailTrackingOk returns a tuple with the MailTracking field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetMailTrackingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.MailTracking.Get(), o.MailTracking.IsSet()
}

// HasMailTracking returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasMailTracking() bool {
	if o != nil && o.MailTracking.IsSet() {
		return true
	}

	return false
}

// SetMailTracking gets a reference to the given NullableBool and assigns it to the MailTracking field.
func (o *CompanyInfoPlanInfoFunctions) SetMailTracking(v bool) *CompanyInfoPlanInfoFunctions {
	o.MailTracking.Set(&v)
        return o
}
// SetMailTrackingNil sets the value for MailTracking to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetMailTrackingNil() *CompanyInfoPlanInfoFunctions {
	o.MailTracking.Set(nil)
    return o
}

// UnsetMailTracking ensures that no value is present for MailTracking, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetMailTracking() {
	o.MailTracking.Unset()
}

// GetPaymentNotifications returns the PaymentNotifications field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetPaymentNotifications() bool {
	if o == nil || IsNil(o.PaymentNotifications.Get()) {
		var ret bool
		return ret
	}
	return *o.PaymentNotifications.Get()
}

// GetPaymentNotificationsOk returns a tuple with the PaymentNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetPaymentNotificationsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentNotifications.Get(), o.PaymentNotifications.IsSet()
}

// HasPaymentNotifications returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasPaymentNotifications() bool {
	if o != nil && o.PaymentNotifications.IsSet() {
		return true
	}

	return false
}

// SetPaymentNotifications gets a reference to the given NullableBool and assigns it to the PaymentNotifications field.
func (o *CompanyInfoPlanInfoFunctions) SetPaymentNotifications(v bool) *CompanyInfoPlanInfoFunctions {
	o.PaymentNotifications.Set(&v)
        return o
}
// SetPaymentNotificationsNil sets the value for PaymentNotifications to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetPaymentNotificationsNil() *CompanyInfoPlanInfoFunctions {
	o.PaymentNotifications.Set(nil)
    return o
}

// UnsetPaymentNotifications ensures that no value is present for PaymentNotifications, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetPaymentNotifications() {
	o.PaymentNotifications.Unset()
}

// GetPaypal returns the Paypal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetPaypal() bool {
	if o == nil || IsNil(o.Paypal.Get()) {
		var ret bool
		return ret
	}
	return *o.Paypal.Get()
}

// GetPaypalOk returns a tuple with the Paypal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetPaypalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Paypal.Get(), o.Paypal.IsSet()
}

// HasPaypal returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasPaypal() bool {
	if o != nil && o.Paypal.IsSet() {
		return true
	}

	return false
}

// SetPaypal gets a reference to the given NullableBool and assigns it to the Paypal field.
func (o *CompanyInfoPlanInfoFunctions) SetPaypal(v bool) *CompanyInfoPlanInfoFunctions {
	o.Paypal.Set(&v)
        return o
}
// SetPaypalNil sets the value for Paypal to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetPaypalNil() *CompanyInfoPlanInfoFunctions {
	o.Paypal.Set(nil)
    return o
}

// UnsetPaypal ensures that no value is present for Paypal, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetPaypal() {
	o.Paypal.Unset()
}

// GetReceipts returns the Receipts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetReceipts() bool {
	if o == nil || IsNil(o.Receipts.Get()) {
		var ret bool
		return ret
	}
	return *o.Receipts.Get()
}

// GetReceiptsOk returns a tuple with the Receipts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetReceiptsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Receipts.Get(), o.Receipts.IsSet()
}

// HasReceipts returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasReceipts() bool {
	if o != nil && o.Receipts.IsSet() {
		return true
	}

	return false
}

// SetReceipts gets a reference to the given NullableBool and assigns it to the Receipts field.
func (o *CompanyInfoPlanInfoFunctions) SetReceipts(v bool) *CompanyInfoPlanInfoFunctions {
	o.Receipts.Set(&v)
        return o
}
// SetReceiptsNil sets the value for Receipts to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetReceiptsNil() *CompanyInfoPlanInfoFunctions {
	o.Receipts.Set(nil)
    return o
}

// UnsetReceipts ensures that no value is present for Receipts, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetReceipts() {
	o.Receipts.Unset()
}

// GetRecurring returns the Recurring field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetRecurring() bool {
	if o == nil || IsNil(o.Recurring.Get()) {
		var ret bool
		return ret
	}
	return *o.Recurring.Get()
}

// GetRecurringOk returns a tuple with the Recurring field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetRecurringOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Recurring.Get(), o.Recurring.IsSet()
}

// HasRecurring returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasRecurring() bool {
	if o != nil && o.Recurring.IsSet() {
		return true
	}

	return false
}

// SetRecurring gets a reference to the given NullableBool and assigns it to the Recurring field.
func (o *CompanyInfoPlanInfoFunctions) SetRecurring(v bool) *CompanyInfoPlanInfoFunctions {
	o.Recurring.Set(&v)
        return o
}
// SetRecurringNil sets the value for Recurring to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetRecurringNil() *CompanyInfoPlanInfoFunctions {
	o.Recurring.Set(nil)
    return o
}

// UnsetRecurring ensures that no value is present for Recurring, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetRecurring() {
	o.Recurring.Unset()
}

// GetSmtp returns the Smtp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetSmtp() bool {
	if o == nil || IsNil(o.Smtp.Get()) {
		var ret bool
		return ret
	}
	return *o.Smtp.Get()
}

// GetSmtpOk returns a tuple with the Smtp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetSmtpOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Smtp.Get(), o.Smtp.IsSet()
}

// HasSmtp returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasSmtp() bool {
	if o != nil && o.Smtp.IsSet() {
		return true
	}

	return false
}

// SetSmtp gets a reference to the given NullableBool and assigns it to the Smtp field.
func (o *CompanyInfoPlanInfoFunctions) SetSmtp(v bool) *CompanyInfoPlanInfoFunctions {
	o.Smtp.Set(&v)
        return o
}
// SetSmtpNil sets the value for Smtp to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetSmtpNil() *CompanyInfoPlanInfoFunctions {
	o.Smtp.Set(nil)
    return o
}

// UnsetSmtp ensures that no value is present for Smtp, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetSmtp() {
	o.Smtp.Unset()
}

// GetSofort returns the Sofort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetSofort() bool {
	if o == nil || IsNil(o.Sofort.Get()) {
		var ret bool
		return ret
	}
	return *o.Sofort.Get()
}

// GetSofortOk returns a tuple with the Sofort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetSofortOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sofort.Get(), o.Sofort.IsSet()
}

// HasSofort returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasSofort() bool {
	if o != nil && o.Sofort.IsSet() {
		return true
	}

	return false
}

// SetSofort gets a reference to the given NullableBool and assigns it to the Sofort field.
func (o *CompanyInfoPlanInfoFunctions) SetSofort(v bool) *CompanyInfoPlanInfoFunctions {
	o.Sofort.Set(&v)
        return o
}
// SetSofortNil sets the value for Sofort to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetSofortNil() *CompanyInfoPlanInfoFunctions {
	o.Sofort.Set(nil)
    return o
}

// UnsetSofort ensures that no value is present for Sofort, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetSofort() {
	o.Sofort.Unset()
}

// GetStock returns the Stock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetStock() bool {
	if o == nil || IsNil(o.Stock.Get()) {
		var ret bool
		return ret
	}
	return *o.Stock.Get()
}

// GetStockOk returns a tuple with the Stock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetStockOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Stock.Get(), o.Stock.IsSet()
}

// HasStock returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasStock() bool {
	if o != nil && o.Stock.IsSet() {
		return true
	}

	return false
}

// SetStock gets a reference to the given NullableBool and assigns it to the Stock field.
func (o *CompanyInfoPlanInfoFunctions) SetStock(v bool) *CompanyInfoPlanInfoFunctions {
	o.Stock.Set(&v)
        return o
}
// SetStockNil sets the value for Stock to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetStockNil() *CompanyInfoPlanInfoFunctions {
	o.Stock.Set(nil)
    return o
}

// UnsetStock ensures that no value is present for Stock, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetStock() {
	o.Stock.Unset()
}

// GetSubaccounts returns the Subaccounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetSubaccounts() bool {
	if o == nil || IsNil(o.Subaccounts.Get()) {
		var ret bool
		return ret
	}
	return *o.Subaccounts.Get()
}

// GetSubaccountsOk returns a tuple with the Subaccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetSubaccountsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subaccounts.Get(), o.Subaccounts.IsSet()
}

// HasSubaccounts returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasSubaccounts() bool {
	if o != nil && o.Subaccounts.IsSet() {
		return true
	}

	return false
}

// SetSubaccounts gets a reference to the given NullableBool and assigns it to the Subaccounts field.
func (o *CompanyInfoPlanInfoFunctions) SetSubaccounts(v bool) *CompanyInfoPlanInfoFunctions {
	o.Subaccounts.Set(&v)
        return o
}
// SetSubaccountsNil sets the value for Subaccounts to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetSubaccountsNil() *CompanyInfoPlanInfoFunctions {
	o.Subaccounts.Set(nil)
    return o
}

// UnsetSubaccounts ensures that no value is present for Subaccounts, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetSubaccounts() {
	o.Subaccounts.Unset()
}

// GetTesseraSanitaria returns the TesseraSanitaria field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetTesseraSanitaria() bool {
	if o == nil || IsNil(o.TesseraSanitaria.Get()) {
		var ret bool
		return ret
	}
	return *o.TesseraSanitaria.Get()
}

// GetTesseraSanitariaOk returns a tuple with the TesseraSanitaria field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetTesseraSanitariaOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TesseraSanitaria.Get(), o.TesseraSanitaria.IsSet()
}

// HasTesseraSanitaria returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasTesseraSanitaria() bool {
	if o != nil && o.TesseraSanitaria.IsSet() {
		return true
	}

	return false
}

// SetTesseraSanitaria gets a reference to the given NullableBool and assigns it to the TesseraSanitaria field.
func (o *CompanyInfoPlanInfoFunctions) SetTesseraSanitaria(v bool) *CompanyInfoPlanInfoFunctions {
	o.TesseraSanitaria.Set(&v)
        return o
}
// SetTesseraSanitariaNil sets the value for TesseraSanitaria to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetTesseraSanitariaNil() *CompanyInfoPlanInfoFunctions {
	o.TesseraSanitaria.Set(nil)
    return o
}

// UnsetTesseraSanitaria ensures that no value is present for TesseraSanitaria, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetTesseraSanitaria() {
	o.TesseraSanitaria.Unset()
}

// GetTsDigital returns the TsDigital field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetTsDigital() bool {
	if o == nil || IsNil(o.TsDigital.Get()) {
		var ret bool
		return ret
	}
	return *o.TsDigital.Get()
}

// GetTsDigitalOk returns a tuple with the TsDigital field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetTsDigitalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TsDigital.Get(), o.TsDigital.IsSet()
}

// HasTsDigital returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasTsDigital() bool {
	if o != nil && o.TsDigital.IsSet() {
		return true
	}

	return false
}

// SetTsDigital gets a reference to the given NullableBool and assigns it to the TsDigital field.
func (o *CompanyInfoPlanInfoFunctions) SetTsDigital(v bool) *CompanyInfoPlanInfoFunctions {
	o.TsDigital.Set(&v)
        return o
}
// SetTsDigitalNil sets the value for TsDigital to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetTsDigitalNil() *CompanyInfoPlanInfoFunctions {
	o.TsDigital.Set(nil)
    return o
}

// UnsetTsDigital ensures that no value is present for TsDigital, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetTsDigital() {
	o.TsDigital.Unset()
}

// GetTsInvoiceTrading returns the TsInvoiceTrading field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetTsInvoiceTrading() bool {
	if o == nil || IsNil(o.TsInvoiceTrading.Get()) {
		var ret bool
		return ret
	}
	return *o.TsInvoiceTrading.Get()
}

// GetTsInvoiceTradingOk returns a tuple with the TsInvoiceTrading field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetTsInvoiceTradingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TsInvoiceTrading.Get(), o.TsInvoiceTrading.IsSet()
}

// HasTsInvoiceTrading returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasTsInvoiceTrading() bool {
	if o != nil && o.TsInvoiceTrading.IsSet() {
		return true
	}

	return false
}

// SetTsInvoiceTrading gets a reference to the given NullableBool and assigns it to the TsInvoiceTrading field.
func (o *CompanyInfoPlanInfoFunctions) SetTsInvoiceTrading(v bool) *CompanyInfoPlanInfoFunctions {
	o.TsInvoiceTrading.Set(&v)
        return o
}
// SetTsInvoiceTradingNil sets the value for TsInvoiceTrading to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetTsInvoiceTradingNil() *CompanyInfoPlanInfoFunctions {
	o.TsInvoiceTrading.Set(nil)
    return o
}

// UnsetTsInvoiceTrading ensures that no value is present for TsInvoiceTrading, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetTsInvoiceTrading() {
	o.TsInvoiceTrading.Unset()
}

// GetTsPay returns the TsPay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfoPlanInfoFunctions) GetTsPay() bool {
	if o == nil || IsNil(o.TsPay.Get()) {
		var ret bool
		return ret
	}
	return *o.TsPay.Get()
}

// GetTsPayOk returns a tuple with the TsPay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfoPlanInfoFunctions) GetTsPayOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TsPay.Get(), o.TsPay.IsSet()
}

// HasTsPay returns a boolean if a field has been set.
func (o *CompanyInfoPlanInfoFunctions) HasTsPay() bool {
	if o != nil && o.TsPay.IsSet() {
		return true
	}

	return false
}

// SetTsPay gets a reference to the given NullableBool and assigns it to the TsPay field.
func (o *CompanyInfoPlanInfoFunctions) SetTsPay(v bool) *CompanyInfoPlanInfoFunctions {
	o.TsPay.Set(&v)
        return o
}
// SetTsPayNil sets the value for TsPay to be an explicit nil
func (o *CompanyInfoPlanInfoFunctions) SetTsPayNil() *CompanyInfoPlanInfoFunctions {
	o.TsPay.Set(nil)
    return o
}

// UnsetTsPay ensures that no value is present for TsPay, not even an explicit nil
func (o *CompanyInfoPlanInfoFunctions) UnsetTsPay() {
	o.TsPay.Unset()
}

func (o CompanyInfoPlanInfoFunctions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyInfoPlanInfoFunctions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Archive.IsSet() {
		toSerialize["archive"] = o.Archive.Get()
	}
	if o.Cerved.IsSet() {
		toSerialize["cerved"] = o.Cerved.Get()
	}
	if o.DocumentAttachments.IsSet() {
		toSerialize["document_attachments"] = o.DocumentAttachments.Get()
	}
	if o.EInvoice.IsSet() {
		toSerialize["e_invoice"] = o.EInvoice.Get()
	}
	if o.Genius.IsSet() {
		toSerialize["genius"] = o.Genius.Get()
	}
	if o.MailTracking.IsSet() {
		toSerialize["mail_tracking"] = o.MailTracking.Get()
	}
	if o.PaymentNotifications.IsSet() {
		toSerialize["payment_notifications"] = o.PaymentNotifications.Get()
	}
	if o.Paypal.IsSet() {
		toSerialize["paypal"] = o.Paypal.Get()
	}
	if o.Receipts.IsSet() {
		toSerialize["receipts"] = o.Receipts.Get()
	}
	if o.Recurring.IsSet() {
		toSerialize["recurring"] = o.Recurring.Get()
	}
	if o.Smtp.IsSet() {
		toSerialize["smtp"] = o.Smtp.Get()
	}
	if o.Sofort.IsSet() {
		toSerialize["sofort"] = o.Sofort.Get()
	}
	if o.Stock.IsSet() {
		toSerialize["stock"] = o.Stock.Get()
	}
	if o.Subaccounts.IsSet() {
		toSerialize["subaccounts"] = o.Subaccounts.Get()
	}
	if o.TesseraSanitaria.IsSet() {
		toSerialize["tessera_sanitaria"] = o.TesseraSanitaria.Get()
	}
	if o.TsDigital.IsSet() {
		toSerialize["ts_digital"] = o.TsDigital.Get()
	}
	if o.TsInvoiceTrading.IsSet() {
		toSerialize["ts_invoice_trading"] = o.TsInvoiceTrading.Get()
	}
	if o.TsPay.IsSet() {
		toSerialize["ts_pay"] = o.TsPay.Get()
	}
	return toSerialize, nil
}

type NullableCompanyInfoPlanInfoFunctions struct {
	value *CompanyInfoPlanInfoFunctions
	isSet bool
}

func (v NullableCompanyInfoPlanInfoFunctions) Get() *CompanyInfoPlanInfoFunctions {
	return v.value
}

func (v *NullableCompanyInfoPlanInfoFunctions) Set(val *CompanyInfoPlanInfoFunctions) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyInfoPlanInfoFunctions) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyInfoPlanInfoFunctions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyInfoPlanInfoFunctions(val *CompanyInfoPlanInfoFunctions) *NullableCompanyInfoPlanInfoFunctions {
	return &NullableCompanyInfoPlanInfoFunctions{value: val, isSet: true}
}

func (v NullableCompanyInfoPlanInfoFunctions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyInfoPlanInfoFunctions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


