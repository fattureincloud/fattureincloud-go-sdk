/*
Fatture in Cloud API v2 - API Reference

Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.

API version: 2.1.5
Contact: info@fattureincloud.it
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// checks if the PriceListItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceListItem{}

// PriceListItem struct for PriceListItem
type PriceListItem struct {
	Price *float32 `json:"price,omitempty"`
}

// NewPriceListItem instantiates a new PriceListItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceListItem() *PriceListItem {
	this := PriceListItem{}
	return &this
}

// NewPriceListItemWithDefaults instantiates a new PriceListItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceListItemWithDefaults() *PriceListItem {
	this := PriceListItem{}
	return &this
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *PriceListItem) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceListItem) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *PriceListItem) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *PriceListItem) SetPrice(v float32) *PriceListItem {
	o.Price = &v
	return o
}

func (o PriceListItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceListItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return toSerialize, nil
}

type NullablePriceListItem struct {
	value *PriceListItem
	isSet bool
}

func (v NullablePriceListItem) Get() *PriceListItem {
	return v.value
}

func (v *NullablePriceListItem) Set(val *PriceListItem) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceListItem) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceListItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceListItem(val *PriceListItem) *NullablePriceListItem {
	return &NullablePriceListItem{value: val, isSet: true}
}

func (v NullablePriceListItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceListItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


